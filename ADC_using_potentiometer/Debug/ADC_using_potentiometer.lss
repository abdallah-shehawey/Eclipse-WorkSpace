
ADC_using_potentiometer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d0e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000f3c  00000000  00000000  00000d64  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000008f6  00000000  00000000  00001ca0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 85 06 	jmp	0xd0a	; 0xd0a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

#include <avr/io.h>
#include "LED.h"
#include "ADC_driver.h"
int main(void)
{
  6c:	0f 93       	push	r16
  6e:	1f 93       	push	r17
  70:	df 93       	push	r29
  72:	cf 93       	push	r28
  74:	cd b7       	in	r28, 0x3d	; 61
  76:	de b7       	in	r29, 0x3e	; 62
	ADC_vinit();
  78:	0e 94 65 00 	call	0xca	; 0xca <ADC_vinit>
	LED_vInit('D',0);
  7c:	84 e4       	ldi	r24, 0x44	; 68
  7e:	60 e0       	ldi	r22, 0x00	; 0
  80:	0e 94 42 06 	call	0xc84	; 0xc84 <LED_vInit>
	LED_vInit('D',1);
  84:	84 e4       	ldi	r24, 0x44	; 68
  86:	61 e0       	ldi	r22, 0x01	; 1
  88:	0e 94 42 06 	call	0xc84	; 0xc84 <LED_vInit>
	LED_vInit('D',2);
  8c:	84 e4       	ldi	r24, 0x44	; 68
  8e:	62 e0       	ldi	r22, 0x02	; 2
  90:	0e 94 42 06 	call	0xc84	; 0xc84 <LED_vInit>
	LED_vInit('D',3);
  94:	84 e4       	ldi	r24, 0x44	; 68
  96:	63 e0       	ldi	r22, 0x03	; 3
  98:	0e 94 42 06 	call	0xc84	; 0xc84 <LED_vInit>
	LED_vInit('D',4);
  9c:	84 e4       	ldi	r24, 0x44	; 68
  9e:	64 e0       	ldi	r22, 0x04	; 4
  a0:	0e 94 42 06 	call	0xc84	; 0xc84 <LED_vInit>
	LED_vInit('D',5);
  a4:	84 e4       	ldi	r24, 0x44	; 68
  a6:	65 e0       	ldi	r22, 0x05	; 5
  a8:	0e 94 42 06 	call	0xc84	; 0xc84 <LED_vInit>
	LED_vInit('D',6);
  ac:	84 e4       	ldi	r24, 0x44	; 68
  ae:	66 e0       	ldi	r22, 0x06	; 6
  b0:	0e 94 42 06 	call	0xc84	; 0xc84 <LED_vInit>
	LED_vInit('D',7);
  b4:	84 e4       	ldi	r24, 0x44	; 68
  b6:	67 e0       	ldi	r22, 0x07	; 7
  b8:	0e 94 42 06 	call	0xc84	; 0xc84 <LED_vInit>
    while(1)
    {
    PORTD=ADC_u16Read();   
  bc:	02 e3       	ldi	r16, 0x32	; 50
  be:	10 e0       	ldi	r17, 0x00	; 0
  c0:	0e 94 88 00 	call	0x110	; 0x110 <ADC_u16Read>
  c4:	f8 01       	movw	r30, r16
  c6:	80 83       	st	Z, r24
  c8:	f9 cf       	rjmp	.-14     	; 0xbc <main+0x50>

000000ca <ADC_vinit>:
 *  Author: Mohamed Zaghlol
 */ 
#include <avr/io.h>
#include "std_macros.h"
void ADC_vinit(void)
{
  ca:	df 93       	push	r29
  cc:	cf 93       	push	r28
  ce:	cd b7       	in	r28, 0x3d	; 61
  d0:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(ADMUX,REFS0); //configure VREF
  d2:	a7 e2       	ldi	r26, 0x27	; 39
  d4:	b0 e0       	ldi	r27, 0x00	; 0
  d6:	e7 e2       	ldi	r30, 0x27	; 39
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	80 81       	ld	r24, Z
  dc:	80 64       	ori	r24, 0x40	; 64
  de:	8c 93       	st	X, r24
	SET_BIT(ADCSRA,ADEN); // enable ADC
  e0:	a6 e2       	ldi	r26, 0x26	; 38
  e2:	b0 e0       	ldi	r27, 0x00	; 0
  e4:	e6 e2       	ldi	r30, 0x26	; 38
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	80 81       	ld	r24, Z
  ea:	80 68       	ori	r24, 0x80	; 128
  ec:	8c 93       	st	X, r24
	/* adjust ADC clock*/
	SET_BIT(ADCSRA,ADPS2);
  ee:	a6 e2       	ldi	r26, 0x26	; 38
  f0:	b0 e0       	ldi	r27, 0x00	; 0
  f2:	e6 e2       	ldi	r30, 0x26	; 38
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	80 81       	ld	r24, Z
  f8:	84 60       	ori	r24, 0x04	; 4
  fa:	8c 93       	st	X, r24
	SET_BIT(ADCSRA,ADPS1);
  fc:	a6 e2       	ldi	r26, 0x26	; 38
  fe:	b0 e0       	ldi	r27, 0x00	; 0
 100:	e6 e2       	ldi	r30, 0x26	; 38
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	82 60       	ori	r24, 0x02	; 2
 108:	8c 93       	st	X, r24
}
 10a:	cf 91       	pop	r28
 10c:	df 91       	pop	r29
 10e:	08 95       	ret

00000110 <ADC_u16Read>:
unsigned short ADC_u16Read(void)
{
 110:	df 93       	push	r29
 112:	cf 93       	push	r28
 114:	00 d0       	rcall	.+0      	; 0x116 <ADC_u16Read+0x6>
 116:	cd b7       	in	r28, 0x3d	; 61
 118:	de b7       	in	r29, 0x3e	; 62
	unsigned short read_val;

	SET_BIT(ADCSRA,ADSC);
 11a:	a6 e2       	ldi	r26, 0x26	; 38
 11c:	b0 e0       	ldi	r27, 0x00	; 0
 11e:	e6 e2       	ldi	r30, 0x26	; 38
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	80 64       	ori	r24, 0x40	; 64
 126:	8c 93       	st	X, r24
	while(READ_BIT(ADCSRA,ADIF) == 0);//stay in your position till ADIF become 1
 128:	e6 e2       	ldi	r30, 0x26	; 38
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	80 81       	ld	r24, Z
 12e:	88 2f       	mov	r24, r24
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	80 71       	andi	r24, 0x10	; 16
 134:	90 70       	andi	r25, 0x00	; 0
 136:	95 95       	asr	r25
 138:	87 95       	ror	r24
 13a:	95 95       	asr	r25
 13c:	87 95       	ror	r24
 13e:	95 95       	asr	r25
 140:	87 95       	ror	r24
 142:	95 95       	asr	r25
 144:	87 95       	ror	r24
 146:	00 97       	sbiw	r24, 0x00	; 0
 148:	79 f3       	breq	.-34     	; 0x128 <ADC_u16Read+0x18>
	SET_BIT(ADCSRA,ADIF); // clear ADIF
 14a:	a6 e2       	ldi	r26, 0x26	; 38
 14c:	b0 e0       	ldi	r27, 0x00	; 0
 14e:	e6 e2       	ldi	r30, 0x26	; 38
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	80 81       	ld	r24, Z
 154:	80 61       	ori	r24, 0x10	; 16
 156:	8c 93       	st	X, r24
	read_val = (ADCL);
 158:	e4 e2       	ldi	r30, 0x24	; 36
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	88 2f       	mov	r24, r24
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	9a 83       	std	Y+2, r25	; 0x02
 164:	89 83       	std	Y+1, r24	; 0x01
	read_val |= (ADCH<<8);
 166:	e5 e2       	ldi	r30, 0x25	; 37
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	80 81       	ld	r24, Z
 16c:	88 2f       	mov	r24, r24
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	98 2f       	mov	r25, r24
 172:	88 27       	eor	r24, r24
 174:	9c 01       	movw	r18, r24
 176:	89 81       	ldd	r24, Y+1	; 0x01
 178:	9a 81       	ldd	r25, Y+2	; 0x02
 17a:	82 2b       	or	r24, r18
 17c:	93 2b       	or	r25, r19
 17e:	9a 83       	std	Y+2, r25	; 0x02
 180:	89 83       	std	Y+1, r24	; 0x01
	return read_val ;
 182:	89 81       	ldd	r24, Y+1	; 0x01
 184:	9a 81       	ldd	r25, Y+2	; 0x02
}
 186:	0f 90       	pop	r0
 188:	0f 90       	pop	r0
 18a:	cf 91       	pop	r28
 18c:	df 91       	pop	r29
 18e:	08 95       	ret

00000190 <DIO_vsetPINDir>:


#include <avr/io.h>
#include "std_macros.h"
void DIO_vsetPINDir(unsigned char portname,unsigned char pinnumber,unsigned char direction)
{
 190:	df 93       	push	r29
 192:	cf 93       	push	r28
 194:	00 d0       	rcall	.+0      	; 0x196 <DIO_vsetPINDir+0x6>
 196:	00 d0       	rcall	.+0      	; 0x198 <DIO_vsetPINDir+0x8>
 198:	0f 92       	push	r0
 19a:	cd b7       	in	r28, 0x3d	; 61
 19c:	de b7       	in	r29, 0x3e	; 62
 19e:	89 83       	std	Y+1, r24	; 0x01
 1a0:	6a 83       	std	Y+2, r22	; 0x02
 1a2:	4b 83       	std	Y+3, r20	; 0x03
	switch(portname)
 1a4:	89 81       	ldd	r24, Y+1	; 0x01
 1a6:	28 2f       	mov	r18, r24
 1a8:	30 e0       	ldi	r19, 0x00	; 0
 1aa:	3d 83       	std	Y+5, r19	; 0x05
 1ac:	2c 83       	std	Y+4, r18	; 0x04
 1ae:	8c 81       	ldd	r24, Y+4	; 0x04
 1b0:	9d 81       	ldd	r25, Y+5	; 0x05
 1b2:	82 34       	cpi	r24, 0x42	; 66
 1b4:	91 05       	cpc	r25, r1
 1b6:	09 f4       	brne	.+2      	; 0x1ba <DIO_vsetPINDir+0x2a>
 1b8:	44 c0       	rjmp	.+136    	; 0x242 <DIO_vsetPINDir+0xb2>
 1ba:	2c 81       	ldd	r18, Y+4	; 0x04
 1bc:	3d 81       	ldd	r19, Y+5	; 0x05
 1be:	23 34       	cpi	r18, 0x43	; 67
 1c0:	31 05       	cpc	r19, r1
 1c2:	34 f4       	brge	.+12     	; 0x1d0 <DIO_vsetPINDir+0x40>
 1c4:	8c 81       	ldd	r24, Y+4	; 0x04
 1c6:	9d 81       	ldd	r25, Y+5	; 0x05
 1c8:	81 34       	cpi	r24, 0x41	; 65
 1ca:	91 05       	cpc	r25, r1
 1cc:	71 f0       	breq	.+28     	; 0x1ea <DIO_vsetPINDir+0x5a>
 1ce:	bc c0       	rjmp	.+376    	; 0x348 <DIO_vsetPINDir+0x1b8>
 1d0:	2c 81       	ldd	r18, Y+4	; 0x04
 1d2:	3d 81       	ldd	r19, Y+5	; 0x05
 1d4:	23 34       	cpi	r18, 0x43	; 67
 1d6:	31 05       	cpc	r19, r1
 1d8:	09 f4       	brne	.+2      	; 0x1dc <DIO_vsetPINDir+0x4c>
 1da:	5f c0       	rjmp	.+190    	; 0x29a <DIO_vsetPINDir+0x10a>
 1dc:	8c 81       	ldd	r24, Y+4	; 0x04
 1de:	9d 81       	ldd	r25, Y+5	; 0x05
 1e0:	84 34       	cpi	r24, 0x44	; 68
 1e2:	91 05       	cpc	r25, r1
 1e4:	09 f4       	brne	.+2      	; 0x1e8 <DIO_vsetPINDir+0x58>
 1e6:	85 c0       	rjmp	.+266    	; 0x2f2 <DIO_vsetPINDir+0x162>
 1e8:	af c0       	rjmp	.+350    	; 0x348 <DIO_vsetPINDir+0x1b8>
	{
		
		
		case 'A':
		if(direction==1)
 1ea:	8b 81       	ldd	r24, Y+3	; 0x03
 1ec:	81 30       	cpi	r24, 0x01	; 1
 1ee:	a1 f4       	brne	.+40     	; 0x218 <DIO_vsetPINDir+0x88>
		{
			SET_BIT(DDRA,pinnumber);//Set the direction of the given pin in port A as output
 1f0:	aa e3       	ldi	r26, 0x3A	; 58
 1f2:	b0 e0       	ldi	r27, 0x00	; 0
 1f4:	ea e3       	ldi	r30, 0x3A	; 58
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	80 81       	ld	r24, Z
 1fa:	48 2f       	mov	r20, r24
 1fc:	8a 81       	ldd	r24, Y+2	; 0x02
 1fe:	28 2f       	mov	r18, r24
 200:	30 e0       	ldi	r19, 0x00	; 0
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 2e       	mov	r0, r18
 208:	02 c0       	rjmp	.+4      	; 0x20e <DIO_vsetPINDir+0x7e>
 20a:	88 0f       	add	r24, r24
 20c:	99 1f       	adc	r25, r25
 20e:	0a 94       	dec	r0
 210:	e2 f7       	brpl	.-8      	; 0x20a <DIO_vsetPINDir+0x7a>
 212:	84 2b       	or	r24, r20
 214:	8c 93       	st	X, r24
 216:	98 c0       	rjmp	.+304    	; 0x348 <DIO_vsetPINDir+0x1b8>
		}
		else
		{
			CLR_BIT(DDRA,pinnumber);//Set the direction of the given pin in port A as input
 218:	aa e3       	ldi	r26, 0x3A	; 58
 21a:	b0 e0       	ldi	r27, 0x00	; 0
 21c:	ea e3       	ldi	r30, 0x3A	; 58
 21e:	f0 e0       	ldi	r31, 0x00	; 0
 220:	80 81       	ld	r24, Z
 222:	48 2f       	mov	r20, r24
 224:	8a 81       	ldd	r24, Y+2	; 0x02
 226:	28 2f       	mov	r18, r24
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	02 2e       	mov	r0, r18
 230:	02 c0       	rjmp	.+4      	; 0x236 <DIO_vsetPINDir+0xa6>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	0a 94       	dec	r0
 238:	e2 f7       	brpl	.-8      	; 0x232 <DIO_vsetPINDir+0xa2>
 23a:	80 95       	com	r24
 23c:	84 23       	and	r24, r20
 23e:	8c 93       	st	X, r24
 240:	83 c0       	rjmp	.+262    	; 0x348 <DIO_vsetPINDir+0x1b8>
		}
		break;
		case 'B':
		if(direction==1)
 242:	8b 81       	ldd	r24, Y+3	; 0x03
 244:	81 30       	cpi	r24, 0x01	; 1
 246:	a1 f4       	brne	.+40     	; 0x270 <DIO_vsetPINDir+0xe0>
		{
			SET_BIT(DDRB,pinnumber);//Set the direction of the given pin in port B as output
 248:	a7 e3       	ldi	r26, 0x37	; 55
 24a:	b0 e0       	ldi	r27, 0x00	; 0
 24c:	e7 e3       	ldi	r30, 0x37	; 55
 24e:	f0 e0       	ldi	r31, 0x00	; 0
 250:	80 81       	ld	r24, Z
 252:	48 2f       	mov	r20, r24
 254:	8a 81       	ldd	r24, Y+2	; 0x02
 256:	28 2f       	mov	r18, r24
 258:	30 e0       	ldi	r19, 0x00	; 0
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	02 2e       	mov	r0, r18
 260:	02 c0       	rjmp	.+4      	; 0x266 <DIO_vsetPINDir+0xd6>
 262:	88 0f       	add	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	0a 94       	dec	r0
 268:	e2 f7       	brpl	.-8      	; 0x262 <DIO_vsetPINDir+0xd2>
 26a:	84 2b       	or	r24, r20
 26c:	8c 93       	st	X, r24
 26e:	6c c0       	rjmp	.+216    	; 0x348 <DIO_vsetPINDir+0x1b8>
		}
		else
		{
			CLR_BIT(DDRB,pinnumber);//Set the direction of the given pin in port B as input
 270:	a7 e3       	ldi	r26, 0x37	; 55
 272:	b0 e0       	ldi	r27, 0x00	; 0
 274:	e7 e3       	ldi	r30, 0x37	; 55
 276:	f0 e0       	ldi	r31, 0x00	; 0
 278:	80 81       	ld	r24, Z
 27a:	48 2f       	mov	r20, r24
 27c:	8a 81       	ldd	r24, Y+2	; 0x02
 27e:	28 2f       	mov	r18, r24
 280:	30 e0       	ldi	r19, 0x00	; 0
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	02 2e       	mov	r0, r18
 288:	02 c0       	rjmp	.+4      	; 0x28e <DIO_vsetPINDir+0xfe>
 28a:	88 0f       	add	r24, r24
 28c:	99 1f       	adc	r25, r25
 28e:	0a 94       	dec	r0
 290:	e2 f7       	brpl	.-8      	; 0x28a <DIO_vsetPINDir+0xfa>
 292:	80 95       	com	r24
 294:	84 23       	and	r24, r20
 296:	8c 93       	st	X, r24
 298:	57 c0       	rjmp	.+174    	; 0x348 <DIO_vsetPINDir+0x1b8>
		}
		break;
		case 'C':
		if(direction==1)
 29a:	8b 81       	ldd	r24, Y+3	; 0x03
 29c:	81 30       	cpi	r24, 0x01	; 1
 29e:	a1 f4       	brne	.+40     	; 0x2c8 <DIO_vsetPINDir+0x138>
		{
			SET_BIT(DDRC,pinnumber);//Set the direction of the given pin in port C as output
 2a0:	a4 e3       	ldi	r26, 0x34	; 52
 2a2:	b0 e0       	ldi	r27, 0x00	; 0
 2a4:	e4 e3       	ldi	r30, 0x34	; 52
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	80 81       	ld	r24, Z
 2aa:	48 2f       	mov	r20, r24
 2ac:	8a 81       	ldd	r24, Y+2	; 0x02
 2ae:	28 2f       	mov	r18, r24
 2b0:	30 e0       	ldi	r19, 0x00	; 0
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	02 2e       	mov	r0, r18
 2b8:	02 c0       	rjmp	.+4      	; 0x2be <DIO_vsetPINDir+0x12e>
 2ba:	88 0f       	add	r24, r24
 2bc:	99 1f       	adc	r25, r25
 2be:	0a 94       	dec	r0
 2c0:	e2 f7       	brpl	.-8      	; 0x2ba <DIO_vsetPINDir+0x12a>
 2c2:	84 2b       	or	r24, r20
 2c4:	8c 93       	st	X, r24
 2c6:	40 c0       	rjmp	.+128    	; 0x348 <DIO_vsetPINDir+0x1b8>
		}
		else
		{
			CLR_BIT(DDRC,pinnumber);//Set the direction of the given pin in port C as input
 2c8:	a4 e3       	ldi	r26, 0x34	; 52
 2ca:	b0 e0       	ldi	r27, 0x00	; 0
 2cc:	e4 e3       	ldi	r30, 0x34	; 52
 2ce:	f0 e0       	ldi	r31, 0x00	; 0
 2d0:	80 81       	ld	r24, Z
 2d2:	48 2f       	mov	r20, r24
 2d4:	8a 81       	ldd	r24, Y+2	; 0x02
 2d6:	28 2f       	mov	r18, r24
 2d8:	30 e0       	ldi	r19, 0x00	; 0
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	02 2e       	mov	r0, r18
 2e0:	02 c0       	rjmp	.+4      	; 0x2e6 <DIO_vsetPINDir+0x156>
 2e2:	88 0f       	add	r24, r24
 2e4:	99 1f       	adc	r25, r25
 2e6:	0a 94       	dec	r0
 2e8:	e2 f7       	brpl	.-8      	; 0x2e2 <DIO_vsetPINDir+0x152>
 2ea:	80 95       	com	r24
 2ec:	84 23       	and	r24, r20
 2ee:	8c 93       	st	X, r24
 2f0:	2b c0       	rjmp	.+86     	; 0x348 <DIO_vsetPINDir+0x1b8>
		}
		break;
		case 'D':
		if(direction==1)
 2f2:	8b 81       	ldd	r24, Y+3	; 0x03
 2f4:	81 30       	cpi	r24, 0x01	; 1
 2f6:	a1 f4       	brne	.+40     	; 0x320 <DIO_vsetPINDir+0x190>
		{
			SET_BIT(DDRD,pinnumber);//Set the direction of the given pin in port D as output
 2f8:	a1 e3       	ldi	r26, 0x31	; 49
 2fa:	b0 e0       	ldi	r27, 0x00	; 0
 2fc:	e1 e3       	ldi	r30, 0x31	; 49
 2fe:	f0 e0       	ldi	r31, 0x00	; 0
 300:	80 81       	ld	r24, Z
 302:	48 2f       	mov	r20, r24
 304:	8a 81       	ldd	r24, Y+2	; 0x02
 306:	28 2f       	mov	r18, r24
 308:	30 e0       	ldi	r19, 0x00	; 0
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	02 2e       	mov	r0, r18
 310:	02 c0       	rjmp	.+4      	; 0x316 <DIO_vsetPINDir+0x186>
 312:	88 0f       	add	r24, r24
 314:	99 1f       	adc	r25, r25
 316:	0a 94       	dec	r0
 318:	e2 f7       	brpl	.-8      	; 0x312 <DIO_vsetPINDir+0x182>
 31a:	84 2b       	or	r24, r20
 31c:	8c 93       	st	X, r24
 31e:	14 c0       	rjmp	.+40     	; 0x348 <DIO_vsetPINDir+0x1b8>
		}
		else
		{
			CLR_BIT(DDRD,pinnumber);//Set the direction of the given pin in port D as input
 320:	a1 e3       	ldi	r26, 0x31	; 49
 322:	b0 e0       	ldi	r27, 0x00	; 0
 324:	e1 e3       	ldi	r30, 0x31	; 49
 326:	f0 e0       	ldi	r31, 0x00	; 0
 328:	80 81       	ld	r24, Z
 32a:	48 2f       	mov	r20, r24
 32c:	8a 81       	ldd	r24, Y+2	; 0x02
 32e:	28 2f       	mov	r18, r24
 330:	30 e0       	ldi	r19, 0x00	; 0
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	02 2e       	mov	r0, r18
 338:	02 c0       	rjmp	.+4      	; 0x33e <DIO_vsetPINDir+0x1ae>
 33a:	88 0f       	add	r24, r24
 33c:	99 1f       	adc	r25, r25
 33e:	0a 94       	dec	r0
 340:	e2 f7       	brpl	.-8      	; 0x33a <DIO_vsetPINDir+0x1aa>
 342:	80 95       	com	r24
 344:	84 23       	and	r24, r20
 346:	8c 93       	st	X, r24
		}
		break;
		default: 
		break;
	}
}
 348:	0f 90       	pop	r0
 34a:	0f 90       	pop	r0
 34c:	0f 90       	pop	r0
 34e:	0f 90       	pop	r0
 350:	0f 90       	pop	r0
 352:	cf 91       	pop	r28
 354:	df 91       	pop	r29
 356:	08 95       	ret

00000358 <DIO_write>:


void DIO_write(unsigned char portname,unsigned char pinnumber,unsigned char outputvalue)
{
 358:	df 93       	push	r29
 35a:	cf 93       	push	r28
 35c:	00 d0       	rcall	.+0      	; 0x35e <DIO_write+0x6>
 35e:	00 d0       	rcall	.+0      	; 0x360 <DIO_write+0x8>
 360:	0f 92       	push	r0
 362:	cd b7       	in	r28, 0x3d	; 61
 364:	de b7       	in	r29, 0x3e	; 62
 366:	89 83       	std	Y+1, r24	; 0x01
 368:	6a 83       	std	Y+2, r22	; 0x02
 36a:	4b 83       	std	Y+3, r20	; 0x03
	switch(portname)
 36c:	89 81       	ldd	r24, Y+1	; 0x01
 36e:	28 2f       	mov	r18, r24
 370:	30 e0       	ldi	r19, 0x00	; 0
 372:	3d 83       	std	Y+5, r19	; 0x05
 374:	2c 83       	std	Y+4, r18	; 0x04
 376:	8c 81       	ldd	r24, Y+4	; 0x04
 378:	9d 81       	ldd	r25, Y+5	; 0x05
 37a:	82 34       	cpi	r24, 0x42	; 66
 37c:	91 05       	cpc	r25, r1
 37e:	09 f4       	brne	.+2      	; 0x382 <DIO_write+0x2a>
 380:	44 c0       	rjmp	.+136    	; 0x40a <DIO_write+0xb2>
 382:	2c 81       	ldd	r18, Y+4	; 0x04
 384:	3d 81       	ldd	r19, Y+5	; 0x05
 386:	23 34       	cpi	r18, 0x43	; 67
 388:	31 05       	cpc	r19, r1
 38a:	34 f4       	brge	.+12     	; 0x398 <DIO_write+0x40>
 38c:	8c 81       	ldd	r24, Y+4	; 0x04
 38e:	9d 81       	ldd	r25, Y+5	; 0x05
 390:	81 34       	cpi	r24, 0x41	; 65
 392:	91 05       	cpc	r25, r1
 394:	71 f0       	breq	.+28     	; 0x3b2 <DIO_write+0x5a>
 396:	bc c0       	rjmp	.+376    	; 0x510 <DIO_write+0x1b8>
 398:	2c 81       	ldd	r18, Y+4	; 0x04
 39a:	3d 81       	ldd	r19, Y+5	; 0x05
 39c:	23 34       	cpi	r18, 0x43	; 67
 39e:	31 05       	cpc	r19, r1
 3a0:	09 f4       	brne	.+2      	; 0x3a4 <DIO_write+0x4c>
 3a2:	5f c0       	rjmp	.+190    	; 0x462 <DIO_write+0x10a>
 3a4:	8c 81       	ldd	r24, Y+4	; 0x04
 3a6:	9d 81       	ldd	r25, Y+5	; 0x05
 3a8:	84 34       	cpi	r24, 0x44	; 68
 3aa:	91 05       	cpc	r25, r1
 3ac:	09 f4       	brne	.+2      	; 0x3b0 <DIO_write+0x58>
 3ae:	85 c0       	rjmp	.+266    	; 0x4ba <DIO_write+0x162>
 3b0:	af c0       	rjmp	.+350    	; 0x510 <DIO_write+0x1b8>
	{
		case 'A' :
		
		if(outputvalue==1)
 3b2:	8b 81       	ldd	r24, Y+3	; 0x03
 3b4:	81 30       	cpi	r24, 0x01	; 1
 3b6:	a1 f4       	brne	.+40     	; 0x3e0 <DIO_write+0x88>
		{
			SET_BIT(PORTA,pinnumber);//Set the value of the given pin in port A as High
 3b8:	ab e3       	ldi	r26, 0x3B	; 59
 3ba:	b0 e0       	ldi	r27, 0x00	; 0
 3bc:	eb e3       	ldi	r30, 0x3B	; 59
 3be:	f0 e0       	ldi	r31, 0x00	; 0
 3c0:	80 81       	ld	r24, Z
 3c2:	48 2f       	mov	r20, r24
 3c4:	8a 81       	ldd	r24, Y+2	; 0x02
 3c6:	28 2f       	mov	r18, r24
 3c8:	30 e0       	ldi	r19, 0x00	; 0
 3ca:	81 e0       	ldi	r24, 0x01	; 1
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	02 2e       	mov	r0, r18
 3d0:	02 c0       	rjmp	.+4      	; 0x3d6 <DIO_write+0x7e>
 3d2:	88 0f       	add	r24, r24
 3d4:	99 1f       	adc	r25, r25
 3d6:	0a 94       	dec	r0
 3d8:	e2 f7       	brpl	.-8      	; 0x3d2 <DIO_write+0x7a>
 3da:	84 2b       	or	r24, r20
 3dc:	8c 93       	st	X, r24
 3de:	98 c0       	rjmp	.+304    	; 0x510 <DIO_write+0x1b8>
		}
		else
		{
			CLR_BIT(PORTA,pinnumber);//Set the value of the given pin in port A as Low
 3e0:	ab e3       	ldi	r26, 0x3B	; 59
 3e2:	b0 e0       	ldi	r27, 0x00	; 0
 3e4:	eb e3       	ldi	r30, 0x3B	; 59
 3e6:	f0 e0       	ldi	r31, 0x00	; 0
 3e8:	80 81       	ld	r24, Z
 3ea:	48 2f       	mov	r20, r24
 3ec:	8a 81       	ldd	r24, Y+2	; 0x02
 3ee:	28 2f       	mov	r18, r24
 3f0:	30 e0       	ldi	r19, 0x00	; 0
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	02 2e       	mov	r0, r18
 3f8:	02 c0       	rjmp	.+4      	; 0x3fe <DIO_write+0xa6>
 3fa:	88 0f       	add	r24, r24
 3fc:	99 1f       	adc	r25, r25
 3fe:	0a 94       	dec	r0
 400:	e2 f7       	brpl	.-8      	; 0x3fa <DIO_write+0xa2>
 402:	80 95       	com	r24
 404:	84 23       	and	r24, r20
 406:	8c 93       	st	X, r24
 408:	83 c0       	rjmp	.+262    	; 0x510 <DIO_write+0x1b8>
		}
		break ;
		case 'B':
		
		if(outputvalue==1)
 40a:	8b 81       	ldd	r24, Y+3	; 0x03
 40c:	81 30       	cpi	r24, 0x01	; 1
 40e:	a1 f4       	brne	.+40     	; 0x438 <DIO_write+0xe0>
		{
			SET_BIT(PORTB,pinnumber);//Set the value of the given pin in port B as High
 410:	a8 e3       	ldi	r26, 0x38	; 56
 412:	b0 e0       	ldi	r27, 0x00	; 0
 414:	e8 e3       	ldi	r30, 0x38	; 56
 416:	f0 e0       	ldi	r31, 0x00	; 0
 418:	80 81       	ld	r24, Z
 41a:	48 2f       	mov	r20, r24
 41c:	8a 81       	ldd	r24, Y+2	; 0x02
 41e:	28 2f       	mov	r18, r24
 420:	30 e0       	ldi	r19, 0x00	; 0
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	90 e0       	ldi	r25, 0x00	; 0
 426:	02 2e       	mov	r0, r18
 428:	02 c0       	rjmp	.+4      	; 0x42e <DIO_write+0xd6>
 42a:	88 0f       	add	r24, r24
 42c:	99 1f       	adc	r25, r25
 42e:	0a 94       	dec	r0
 430:	e2 f7       	brpl	.-8      	; 0x42a <DIO_write+0xd2>
 432:	84 2b       	or	r24, r20
 434:	8c 93       	st	X, r24
 436:	6c c0       	rjmp	.+216    	; 0x510 <DIO_write+0x1b8>
		}
		else
		{
			CLR_BIT(PORTB,pinnumber);//Set the value of the given pin in port B as Low
 438:	a8 e3       	ldi	r26, 0x38	; 56
 43a:	b0 e0       	ldi	r27, 0x00	; 0
 43c:	e8 e3       	ldi	r30, 0x38	; 56
 43e:	f0 e0       	ldi	r31, 0x00	; 0
 440:	80 81       	ld	r24, Z
 442:	48 2f       	mov	r20, r24
 444:	8a 81       	ldd	r24, Y+2	; 0x02
 446:	28 2f       	mov	r18, r24
 448:	30 e0       	ldi	r19, 0x00	; 0
 44a:	81 e0       	ldi	r24, 0x01	; 1
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	02 2e       	mov	r0, r18
 450:	02 c0       	rjmp	.+4      	; 0x456 <DIO_write+0xfe>
 452:	88 0f       	add	r24, r24
 454:	99 1f       	adc	r25, r25
 456:	0a 94       	dec	r0
 458:	e2 f7       	brpl	.-8      	; 0x452 <DIO_write+0xfa>
 45a:	80 95       	com	r24
 45c:	84 23       	and	r24, r20
 45e:	8c 93       	st	X, r24
 460:	57 c0       	rjmp	.+174    	; 0x510 <DIO_write+0x1b8>
		}
		break ;
		case 'C' :
		
		if(outputvalue==1)
 462:	8b 81       	ldd	r24, Y+3	; 0x03
 464:	81 30       	cpi	r24, 0x01	; 1
 466:	a1 f4       	brne	.+40     	; 0x490 <DIO_write+0x138>
		{
			SET_BIT(PORTC,pinnumber);//Set the value of the given pin in port C as High
 468:	a5 e3       	ldi	r26, 0x35	; 53
 46a:	b0 e0       	ldi	r27, 0x00	; 0
 46c:	e5 e3       	ldi	r30, 0x35	; 53
 46e:	f0 e0       	ldi	r31, 0x00	; 0
 470:	80 81       	ld	r24, Z
 472:	48 2f       	mov	r20, r24
 474:	8a 81       	ldd	r24, Y+2	; 0x02
 476:	28 2f       	mov	r18, r24
 478:	30 e0       	ldi	r19, 0x00	; 0
 47a:	81 e0       	ldi	r24, 0x01	; 1
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	02 2e       	mov	r0, r18
 480:	02 c0       	rjmp	.+4      	; 0x486 <DIO_write+0x12e>
 482:	88 0f       	add	r24, r24
 484:	99 1f       	adc	r25, r25
 486:	0a 94       	dec	r0
 488:	e2 f7       	brpl	.-8      	; 0x482 <DIO_write+0x12a>
 48a:	84 2b       	or	r24, r20
 48c:	8c 93       	st	X, r24
 48e:	40 c0       	rjmp	.+128    	; 0x510 <DIO_write+0x1b8>
		}
		else
		{
			CLR_BIT(PORTC,pinnumber);//Set the value of the given pin in port C as Low
 490:	a5 e3       	ldi	r26, 0x35	; 53
 492:	b0 e0       	ldi	r27, 0x00	; 0
 494:	e5 e3       	ldi	r30, 0x35	; 53
 496:	f0 e0       	ldi	r31, 0x00	; 0
 498:	80 81       	ld	r24, Z
 49a:	48 2f       	mov	r20, r24
 49c:	8a 81       	ldd	r24, Y+2	; 0x02
 49e:	28 2f       	mov	r18, r24
 4a0:	30 e0       	ldi	r19, 0x00	; 0
 4a2:	81 e0       	ldi	r24, 0x01	; 1
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	02 2e       	mov	r0, r18
 4a8:	02 c0       	rjmp	.+4      	; 0x4ae <DIO_write+0x156>
 4aa:	88 0f       	add	r24, r24
 4ac:	99 1f       	adc	r25, r25
 4ae:	0a 94       	dec	r0
 4b0:	e2 f7       	brpl	.-8      	; 0x4aa <DIO_write+0x152>
 4b2:	80 95       	com	r24
 4b4:	84 23       	and	r24, r20
 4b6:	8c 93       	st	X, r24
 4b8:	2b c0       	rjmp	.+86     	; 0x510 <DIO_write+0x1b8>
		}
		break ;
		case 'D':
		
		if(outputvalue==1)
 4ba:	8b 81       	ldd	r24, Y+3	; 0x03
 4bc:	81 30       	cpi	r24, 0x01	; 1
 4be:	a1 f4       	brne	.+40     	; 0x4e8 <DIO_write+0x190>
		{
			SET_BIT(PORTD,pinnumber);//Set the value of the given pin in port D as High
 4c0:	a2 e3       	ldi	r26, 0x32	; 50
 4c2:	b0 e0       	ldi	r27, 0x00	; 0
 4c4:	e2 e3       	ldi	r30, 0x32	; 50
 4c6:	f0 e0       	ldi	r31, 0x00	; 0
 4c8:	80 81       	ld	r24, Z
 4ca:	48 2f       	mov	r20, r24
 4cc:	8a 81       	ldd	r24, Y+2	; 0x02
 4ce:	28 2f       	mov	r18, r24
 4d0:	30 e0       	ldi	r19, 0x00	; 0
 4d2:	81 e0       	ldi	r24, 0x01	; 1
 4d4:	90 e0       	ldi	r25, 0x00	; 0
 4d6:	02 2e       	mov	r0, r18
 4d8:	02 c0       	rjmp	.+4      	; 0x4de <DIO_write+0x186>
 4da:	88 0f       	add	r24, r24
 4dc:	99 1f       	adc	r25, r25
 4de:	0a 94       	dec	r0
 4e0:	e2 f7       	brpl	.-8      	; 0x4da <DIO_write+0x182>
 4e2:	84 2b       	or	r24, r20
 4e4:	8c 93       	st	X, r24
 4e6:	14 c0       	rjmp	.+40     	; 0x510 <DIO_write+0x1b8>
		}
		else
		{
			CLR_BIT(PORTD,pinnumber);//Set the value of the given pin in port D as Low
 4e8:	a2 e3       	ldi	r26, 0x32	; 50
 4ea:	b0 e0       	ldi	r27, 0x00	; 0
 4ec:	e2 e3       	ldi	r30, 0x32	; 50
 4ee:	f0 e0       	ldi	r31, 0x00	; 0
 4f0:	80 81       	ld	r24, Z
 4f2:	48 2f       	mov	r20, r24
 4f4:	8a 81       	ldd	r24, Y+2	; 0x02
 4f6:	28 2f       	mov	r18, r24
 4f8:	30 e0       	ldi	r19, 0x00	; 0
 4fa:	81 e0       	ldi	r24, 0x01	; 1
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	02 2e       	mov	r0, r18
 500:	02 c0       	rjmp	.+4      	; 0x506 <DIO_write+0x1ae>
 502:	88 0f       	add	r24, r24
 504:	99 1f       	adc	r25, r25
 506:	0a 94       	dec	r0
 508:	e2 f7       	brpl	.-8      	; 0x502 <DIO_write+0x1aa>
 50a:	80 95       	com	r24
 50c:	84 23       	and	r24, r20
 50e:	8c 93       	st	X, r24
		}
		break ;
		default: break ;
	}
}
 510:	0f 90       	pop	r0
 512:	0f 90       	pop	r0
 514:	0f 90       	pop	r0
 516:	0f 90       	pop	r0
 518:	0f 90       	pop	r0
 51a:	cf 91       	pop	r28
 51c:	df 91       	pop	r29
 51e:	08 95       	ret

00000520 <DIO_u8read>:


unsigned char DIO_u8read(unsigned char portname,unsigned char pinnumber)
{
 520:	df 93       	push	r29
 522:	cf 93       	push	r28
 524:	00 d0       	rcall	.+0      	; 0x526 <DIO_u8read+0x6>
 526:	00 d0       	rcall	.+0      	; 0x528 <DIO_u8read+0x8>
 528:	0f 92       	push	r0
 52a:	cd b7       	in	r28, 0x3d	; 61
 52c:	de b7       	in	r29, 0x3e	; 62
 52e:	8a 83       	std	Y+2, r24	; 0x02
 530:	6b 83       	std	Y+3, r22	; 0x03
	unsigned char return_value=0;
 532:	19 82       	std	Y+1, r1	; 0x01
	switch(portname)
 534:	8a 81       	ldd	r24, Y+2	; 0x02
 536:	28 2f       	mov	r18, r24
 538:	30 e0       	ldi	r19, 0x00	; 0
 53a:	3d 83       	std	Y+5, r19	; 0x05
 53c:	2c 83       	std	Y+4, r18	; 0x04
 53e:	4c 81       	ldd	r20, Y+4	; 0x04
 540:	5d 81       	ldd	r21, Y+5	; 0x05
 542:	42 34       	cpi	r20, 0x42	; 66
 544:	51 05       	cpc	r21, r1
 546:	b1 f1       	breq	.+108    	; 0x5b4 <DIO_u8read+0x94>
 548:	8c 81       	ldd	r24, Y+4	; 0x04
 54a:	9d 81       	ldd	r25, Y+5	; 0x05
 54c:	83 34       	cpi	r24, 0x43	; 67
 54e:	91 05       	cpc	r25, r1
 550:	34 f4       	brge	.+12     	; 0x55e <DIO_u8read+0x3e>
 552:	2c 81       	ldd	r18, Y+4	; 0x04
 554:	3d 81       	ldd	r19, Y+5	; 0x05
 556:	21 34       	cpi	r18, 0x41	; 65
 558:	31 05       	cpc	r19, r1
 55a:	71 f0       	breq	.+28     	; 0x578 <DIO_u8read+0x58>
 55c:	84 c0       	rjmp	.+264    	; 0x666 <DIO_u8read+0x146>
 55e:	4c 81       	ldd	r20, Y+4	; 0x04
 560:	5d 81       	ldd	r21, Y+5	; 0x05
 562:	43 34       	cpi	r20, 0x43	; 67
 564:	51 05       	cpc	r21, r1
 566:	09 f4       	brne	.+2      	; 0x56a <DIO_u8read+0x4a>
 568:	43 c0       	rjmp	.+134    	; 0x5f0 <DIO_u8read+0xd0>
 56a:	8c 81       	ldd	r24, Y+4	; 0x04
 56c:	9d 81       	ldd	r25, Y+5	; 0x05
 56e:	84 34       	cpi	r24, 0x44	; 68
 570:	91 05       	cpc	r25, r1
 572:	09 f4       	brne	.+2      	; 0x576 <DIO_u8read+0x56>
 574:	5b c0       	rjmp	.+182    	; 0x62c <DIO_u8read+0x10c>
 576:	77 c0       	rjmp	.+238    	; 0x666 <DIO_u8read+0x146>
	{
		case 'A' :
		return_value=READ_BIT(PINA,pinnumber);//Read the value from the given pin in port A
 578:	e9 e3       	ldi	r30, 0x39	; 57
 57a:	f0 e0       	ldi	r31, 0x00	; 0
 57c:	80 81       	ld	r24, Z
 57e:	48 2f       	mov	r20, r24
 580:	50 e0       	ldi	r21, 0x00	; 0
 582:	8b 81       	ldd	r24, Y+3	; 0x03
 584:	28 2f       	mov	r18, r24
 586:	30 e0       	ldi	r19, 0x00	; 0
 588:	81 e0       	ldi	r24, 0x01	; 1
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	02 c0       	rjmp	.+4      	; 0x592 <DIO_u8read+0x72>
 58e:	88 0f       	add	r24, r24
 590:	99 1f       	adc	r25, r25
 592:	2a 95       	dec	r18
 594:	e2 f7       	brpl	.-8      	; 0x58e <DIO_u8read+0x6e>
 596:	9a 01       	movw	r18, r20
 598:	28 23       	and	r18, r24
 59a:	39 23       	and	r19, r25
 59c:	8b 81       	ldd	r24, Y+3	; 0x03
 59e:	88 2f       	mov	r24, r24
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	a9 01       	movw	r20, r18
 5a4:	02 c0       	rjmp	.+4      	; 0x5aa <DIO_u8read+0x8a>
 5a6:	55 95       	asr	r21
 5a8:	47 95       	ror	r20
 5aa:	8a 95       	dec	r24
 5ac:	e2 f7       	brpl	.-8      	; 0x5a6 <DIO_u8read+0x86>
 5ae:	ca 01       	movw	r24, r20
 5b0:	89 83       	std	Y+1, r24	; 0x01
 5b2:	59 c0       	rjmp	.+178    	; 0x666 <DIO_u8read+0x146>
		break;
		
		case 'B' :
		return_value=READ_BIT(PINB,pinnumber);//Read the value from the given pin in port B
 5b4:	e6 e3       	ldi	r30, 0x36	; 54
 5b6:	f0 e0       	ldi	r31, 0x00	; 0
 5b8:	80 81       	ld	r24, Z
 5ba:	48 2f       	mov	r20, r24
 5bc:	50 e0       	ldi	r21, 0x00	; 0
 5be:	8b 81       	ldd	r24, Y+3	; 0x03
 5c0:	28 2f       	mov	r18, r24
 5c2:	30 e0       	ldi	r19, 0x00	; 0
 5c4:	81 e0       	ldi	r24, 0x01	; 1
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	02 c0       	rjmp	.+4      	; 0x5ce <DIO_u8read+0xae>
 5ca:	88 0f       	add	r24, r24
 5cc:	99 1f       	adc	r25, r25
 5ce:	2a 95       	dec	r18
 5d0:	e2 f7       	brpl	.-8      	; 0x5ca <DIO_u8read+0xaa>
 5d2:	9a 01       	movw	r18, r20
 5d4:	28 23       	and	r18, r24
 5d6:	39 23       	and	r19, r25
 5d8:	8b 81       	ldd	r24, Y+3	; 0x03
 5da:	88 2f       	mov	r24, r24
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	a9 01       	movw	r20, r18
 5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <DIO_u8read+0xc6>
 5e2:	55 95       	asr	r21
 5e4:	47 95       	ror	r20
 5e6:	8a 95       	dec	r24
 5e8:	e2 f7       	brpl	.-8      	; 0x5e2 <DIO_u8read+0xc2>
 5ea:	ca 01       	movw	r24, r20
 5ec:	89 83       	std	Y+1, r24	; 0x01
 5ee:	3b c0       	rjmp	.+118    	; 0x666 <DIO_u8read+0x146>
		break;
		
		case 'C' :
		return_value=READ_BIT(PINC,pinnumber);//Read the value from the given pin in port C
 5f0:	e3 e3       	ldi	r30, 0x33	; 51
 5f2:	f0 e0       	ldi	r31, 0x00	; 0
 5f4:	80 81       	ld	r24, Z
 5f6:	48 2f       	mov	r20, r24
 5f8:	50 e0       	ldi	r21, 0x00	; 0
 5fa:	8b 81       	ldd	r24, Y+3	; 0x03
 5fc:	28 2f       	mov	r18, r24
 5fe:	30 e0       	ldi	r19, 0x00	; 0
 600:	81 e0       	ldi	r24, 0x01	; 1
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	02 c0       	rjmp	.+4      	; 0x60a <DIO_u8read+0xea>
 606:	88 0f       	add	r24, r24
 608:	99 1f       	adc	r25, r25
 60a:	2a 95       	dec	r18
 60c:	e2 f7       	brpl	.-8      	; 0x606 <DIO_u8read+0xe6>
 60e:	9a 01       	movw	r18, r20
 610:	28 23       	and	r18, r24
 612:	39 23       	and	r19, r25
 614:	8b 81       	ldd	r24, Y+3	; 0x03
 616:	88 2f       	mov	r24, r24
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	a9 01       	movw	r20, r18
 61c:	02 c0       	rjmp	.+4      	; 0x622 <DIO_u8read+0x102>
 61e:	55 95       	asr	r21
 620:	47 95       	ror	r20
 622:	8a 95       	dec	r24
 624:	e2 f7       	brpl	.-8      	; 0x61e <DIO_u8read+0xfe>
 626:	ca 01       	movw	r24, r20
 628:	89 83       	std	Y+1, r24	; 0x01
 62a:	1d c0       	rjmp	.+58     	; 0x666 <DIO_u8read+0x146>
		break;
		
		case 'D' :
		return_value=READ_BIT(PIND,pinnumber);//Read the value from the given pin in port D
 62c:	e0 e3       	ldi	r30, 0x30	; 48
 62e:	f0 e0       	ldi	r31, 0x00	; 0
 630:	80 81       	ld	r24, Z
 632:	48 2f       	mov	r20, r24
 634:	50 e0       	ldi	r21, 0x00	; 0
 636:	8b 81       	ldd	r24, Y+3	; 0x03
 638:	28 2f       	mov	r18, r24
 63a:	30 e0       	ldi	r19, 0x00	; 0
 63c:	81 e0       	ldi	r24, 0x01	; 1
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	02 c0       	rjmp	.+4      	; 0x646 <DIO_u8read+0x126>
 642:	88 0f       	add	r24, r24
 644:	99 1f       	adc	r25, r25
 646:	2a 95       	dec	r18
 648:	e2 f7       	brpl	.-8      	; 0x642 <DIO_u8read+0x122>
 64a:	9a 01       	movw	r18, r20
 64c:	28 23       	and	r18, r24
 64e:	39 23       	and	r19, r25
 650:	8b 81       	ldd	r24, Y+3	; 0x03
 652:	88 2f       	mov	r24, r24
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	a9 01       	movw	r20, r18
 658:	02 c0       	rjmp	.+4      	; 0x65e <DIO_u8read+0x13e>
 65a:	55 95       	asr	r21
 65c:	47 95       	ror	r20
 65e:	8a 95       	dec	r24
 660:	e2 f7       	brpl	.-8      	; 0x65a <DIO_u8read+0x13a>
 662:	ca 01       	movw	r24, r20
 664:	89 83       	std	Y+1, r24	; 0x01
		break;
		default: 
		break;
	}
	return return_value ;
 666:	89 81       	ldd	r24, Y+1	; 0x01
}
 668:	0f 90       	pop	r0
 66a:	0f 90       	pop	r0
 66c:	0f 90       	pop	r0
 66e:	0f 90       	pop	r0
 670:	0f 90       	pop	r0
 672:	cf 91       	pop	r28
 674:	df 91       	pop	r29
 676:	08 95       	ret

00000678 <DIO_toggle>:
void DIO_toggle(unsigned char portname,unsigned char pinnumber)
{
 678:	df 93       	push	r29
 67a:	cf 93       	push	r28
 67c:	00 d0       	rcall	.+0      	; 0x67e <DIO_toggle+0x6>
 67e:	00 d0       	rcall	.+0      	; 0x680 <DIO_toggle+0x8>
 680:	cd b7       	in	r28, 0x3d	; 61
 682:	de b7       	in	r29, 0x3e	; 62
 684:	89 83       	std	Y+1, r24	; 0x01
 686:	6a 83       	std	Y+2, r22	; 0x02
	switch(portname)
 688:	89 81       	ldd	r24, Y+1	; 0x01
 68a:	28 2f       	mov	r18, r24
 68c:	30 e0       	ldi	r19, 0x00	; 0
 68e:	3c 83       	std	Y+4, r19	; 0x04
 690:	2b 83       	std	Y+3, r18	; 0x03
 692:	8b 81       	ldd	r24, Y+3	; 0x03
 694:	9c 81       	ldd	r25, Y+4	; 0x04
 696:	82 34       	cpi	r24, 0x42	; 66
 698:	91 05       	cpc	r25, r1
 69a:	51 f1       	breq	.+84     	; 0x6f0 <DIO_toggle+0x78>
 69c:	2b 81       	ldd	r18, Y+3	; 0x03
 69e:	3c 81       	ldd	r19, Y+4	; 0x04
 6a0:	23 34       	cpi	r18, 0x43	; 67
 6a2:	31 05       	cpc	r19, r1
 6a4:	34 f4       	brge	.+12     	; 0x6b2 <DIO_toggle+0x3a>
 6a6:	8b 81       	ldd	r24, Y+3	; 0x03
 6a8:	9c 81       	ldd	r25, Y+4	; 0x04
 6aa:	81 34       	cpi	r24, 0x41	; 65
 6ac:	91 05       	cpc	r25, r1
 6ae:	61 f0       	breq	.+24     	; 0x6c8 <DIO_toggle+0x50>
 6b0:	5a c0       	rjmp	.+180    	; 0x766 <DIO_toggle+0xee>
 6b2:	2b 81       	ldd	r18, Y+3	; 0x03
 6b4:	3c 81       	ldd	r19, Y+4	; 0x04
 6b6:	23 34       	cpi	r18, 0x43	; 67
 6b8:	31 05       	cpc	r19, r1
 6ba:	71 f1       	breq	.+92     	; 0x718 <DIO_toggle+0xa0>
 6bc:	8b 81       	ldd	r24, Y+3	; 0x03
 6be:	9c 81       	ldd	r25, Y+4	; 0x04
 6c0:	84 34       	cpi	r24, 0x44	; 68
 6c2:	91 05       	cpc	r25, r1
 6c4:	e9 f1       	breq	.+122    	; 0x740 <DIO_toggle+0xc8>
 6c6:	4f c0       	rjmp	.+158    	; 0x766 <DIO_toggle+0xee>
	{
		case 'A':
		TOG_BIT(PORTA,pinnumber);//Toggle the value of the given pin in port A
 6c8:	ab e3       	ldi	r26, 0x3B	; 59
 6ca:	b0 e0       	ldi	r27, 0x00	; 0
 6cc:	eb e3       	ldi	r30, 0x3B	; 59
 6ce:	f0 e0       	ldi	r31, 0x00	; 0
 6d0:	80 81       	ld	r24, Z
 6d2:	48 2f       	mov	r20, r24
 6d4:	8a 81       	ldd	r24, Y+2	; 0x02
 6d6:	28 2f       	mov	r18, r24
 6d8:	30 e0       	ldi	r19, 0x00	; 0
 6da:	81 e0       	ldi	r24, 0x01	; 1
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	02 2e       	mov	r0, r18
 6e0:	02 c0       	rjmp	.+4      	; 0x6e6 <DIO_toggle+0x6e>
 6e2:	88 0f       	add	r24, r24
 6e4:	99 1f       	adc	r25, r25
 6e6:	0a 94       	dec	r0
 6e8:	e2 f7       	brpl	.-8      	; 0x6e2 <DIO_toggle+0x6a>
 6ea:	84 27       	eor	r24, r20
 6ec:	8c 93       	st	X, r24
 6ee:	3b c0       	rjmp	.+118    	; 0x766 <DIO_toggle+0xee>
		break;
		case 'B':
		TOG_BIT(PORTB,pinnumber);//Toggle the value of the given pin in port B
 6f0:	a8 e3       	ldi	r26, 0x38	; 56
 6f2:	b0 e0       	ldi	r27, 0x00	; 0
 6f4:	e8 e3       	ldi	r30, 0x38	; 56
 6f6:	f0 e0       	ldi	r31, 0x00	; 0
 6f8:	80 81       	ld	r24, Z
 6fa:	48 2f       	mov	r20, r24
 6fc:	8a 81       	ldd	r24, Y+2	; 0x02
 6fe:	28 2f       	mov	r18, r24
 700:	30 e0       	ldi	r19, 0x00	; 0
 702:	81 e0       	ldi	r24, 0x01	; 1
 704:	90 e0       	ldi	r25, 0x00	; 0
 706:	02 2e       	mov	r0, r18
 708:	02 c0       	rjmp	.+4      	; 0x70e <DIO_toggle+0x96>
 70a:	88 0f       	add	r24, r24
 70c:	99 1f       	adc	r25, r25
 70e:	0a 94       	dec	r0
 710:	e2 f7       	brpl	.-8      	; 0x70a <DIO_toggle+0x92>
 712:	84 27       	eor	r24, r20
 714:	8c 93       	st	X, r24
 716:	27 c0       	rjmp	.+78     	; 0x766 <DIO_toggle+0xee>
		break;
		case 'C':
		TOG_BIT(PORTC,pinnumber);//Toggle the value of the given pin in port C
 718:	a5 e3       	ldi	r26, 0x35	; 53
 71a:	b0 e0       	ldi	r27, 0x00	; 0
 71c:	e5 e3       	ldi	r30, 0x35	; 53
 71e:	f0 e0       	ldi	r31, 0x00	; 0
 720:	80 81       	ld	r24, Z
 722:	48 2f       	mov	r20, r24
 724:	8a 81       	ldd	r24, Y+2	; 0x02
 726:	28 2f       	mov	r18, r24
 728:	30 e0       	ldi	r19, 0x00	; 0
 72a:	81 e0       	ldi	r24, 0x01	; 1
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	02 2e       	mov	r0, r18
 730:	02 c0       	rjmp	.+4      	; 0x736 <DIO_toggle+0xbe>
 732:	88 0f       	add	r24, r24
 734:	99 1f       	adc	r25, r25
 736:	0a 94       	dec	r0
 738:	e2 f7       	brpl	.-8      	; 0x732 <DIO_toggle+0xba>
 73a:	84 27       	eor	r24, r20
 73c:	8c 93       	st	X, r24
 73e:	13 c0       	rjmp	.+38     	; 0x766 <DIO_toggle+0xee>
		break;
		case 'D':
		TOG_BIT(PORTD,pinnumber);//Toggle the value of the given pin in port D
 740:	a2 e3       	ldi	r26, 0x32	; 50
 742:	b0 e0       	ldi	r27, 0x00	; 0
 744:	e2 e3       	ldi	r30, 0x32	; 50
 746:	f0 e0       	ldi	r31, 0x00	; 0
 748:	80 81       	ld	r24, Z
 74a:	48 2f       	mov	r20, r24
 74c:	8a 81       	ldd	r24, Y+2	; 0x02
 74e:	28 2f       	mov	r18, r24
 750:	30 e0       	ldi	r19, 0x00	; 0
 752:	81 e0       	ldi	r24, 0x01	; 1
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	02 2e       	mov	r0, r18
 758:	02 c0       	rjmp	.+4      	; 0x75e <DIO_toggle+0xe6>
 75a:	88 0f       	add	r24, r24
 75c:	99 1f       	adc	r25, r25
 75e:	0a 94       	dec	r0
 760:	e2 f7       	brpl	.-8      	; 0x75a <DIO_toggle+0xe2>
 762:	84 27       	eor	r24, r20
 764:	8c 93       	st	X, r24
		break;
		default: break;
	}
}
 766:	0f 90       	pop	r0
 768:	0f 90       	pop	r0
 76a:	0f 90       	pop	r0
 76c:	0f 90       	pop	r0
 76e:	cf 91       	pop	r28
 770:	df 91       	pop	r29
 772:	08 95       	ret

00000774 <DIO_set_port_direction>:
void DIO_set_port_direction(unsigned char portname,unsigned char direction)
{
 774:	df 93       	push	r29
 776:	cf 93       	push	r28
 778:	00 d0       	rcall	.+0      	; 0x77a <DIO_set_port_direction+0x6>
 77a:	00 d0       	rcall	.+0      	; 0x77c <DIO_set_port_direction+0x8>
 77c:	cd b7       	in	r28, 0x3d	; 61
 77e:	de b7       	in	r29, 0x3e	; 62
 780:	89 83       	std	Y+1, r24	; 0x01
 782:	6a 83       	std	Y+2, r22	; 0x02
	switch(portname)
 784:	89 81       	ldd	r24, Y+1	; 0x01
 786:	28 2f       	mov	r18, r24
 788:	30 e0       	ldi	r19, 0x00	; 0
 78a:	3c 83       	std	Y+4, r19	; 0x04
 78c:	2b 83       	std	Y+3, r18	; 0x03
 78e:	8b 81       	ldd	r24, Y+3	; 0x03
 790:	9c 81       	ldd	r25, Y+4	; 0x04
 792:	82 34       	cpi	r24, 0x42	; 66
 794:	91 05       	cpc	r25, r1
 796:	d9 f0       	breq	.+54     	; 0x7ce <DIO_set_port_direction+0x5a>
 798:	2b 81       	ldd	r18, Y+3	; 0x03
 79a:	3c 81       	ldd	r19, Y+4	; 0x04
 79c:	23 34       	cpi	r18, 0x43	; 67
 79e:	31 05       	cpc	r19, r1
 7a0:	34 f4       	brge	.+12     	; 0x7ae <DIO_set_port_direction+0x3a>
 7a2:	8b 81       	ldd	r24, Y+3	; 0x03
 7a4:	9c 81       	ldd	r25, Y+4	; 0x04
 7a6:	81 34       	cpi	r24, 0x41	; 65
 7a8:	91 05       	cpc	r25, r1
 7aa:	61 f0       	breq	.+24     	; 0x7c4 <DIO_set_port_direction+0x50>
 7ac:	1e c0       	rjmp	.+60     	; 0x7ea <DIO_set_port_direction+0x76>
 7ae:	2b 81       	ldd	r18, Y+3	; 0x03
 7b0:	3c 81       	ldd	r19, Y+4	; 0x04
 7b2:	23 34       	cpi	r18, 0x43	; 67
 7b4:	31 05       	cpc	r19, r1
 7b6:	81 f0       	breq	.+32     	; 0x7d8 <DIO_set_port_direction+0x64>
 7b8:	8b 81       	ldd	r24, Y+3	; 0x03
 7ba:	9c 81       	ldd	r25, Y+4	; 0x04
 7bc:	84 34       	cpi	r24, 0x44	; 68
 7be:	91 05       	cpc	r25, r1
 7c0:	81 f0       	breq	.+32     	; 0x7e2 <DIO_set_port_direction+0x6e>
 7c2:	13 c0       	rjmp	.+38     	; 0x7ea <DIO_set_port_direction+0x76>
	{
		case 'A' :
		DDRA=direction; //set the direction of port A
 7c4:	ea e3       	ldi	r30, 0x3A	; 58
 7c6:	f0 e0       	ldi	r31, 0x00	; 0
 7c8:	8a 81       	ldd	r24, Y+2	; 0x02
 7ca:	80 83       	st	Z, r24
 7cc:	0e c0       	rjmp	.+28     	; 0x7ea <DIO_set_port_direction+0x76>
		break ;
		case 'B':
		DDRB=direction; //set the direction of port B
 7ce:	e7 e3       	ldi	r30, 0x37	; 55
 7d0:	f0 e0       	ldi	r31, 0x00	; 0
 7d2:	8a 81       	ldd	r24, Y+2	; 0x02
 7d4:	80 83       	st	Z, r24
 7d6:	09 c0       	rjmp	.+18     	; 0x7ea <DIO_set_port_direction+0x76>
		break ;
		case 'C' :
		DDRC=direction; //set the direction of port C
 7d8:	e4 e3       	ldi	r30, 0x34	; 52
 7da:	f0 e0       	ldi	r31, 0x00	; 0
 7dc:	8a 81       	ldd	r24, Y+2	; 0x02
 7de:	80 83       	st	Z, r24
 7e0:	04 c0       	rjmp	.+8      	; 0x7ea <DIO_set_port_direction+0x76>
		break ;
		case 'D':
		DDRD=direction; //set the direction of port D
 7e2:	e1 e3       	ldi	r30, 0x31	; 49
 7e4:	f0 e0       	ldi	r31, 0x00	; 0
 7e6:	8a 81       	ldd	r24, Y+2	; 0x02
 7e8:	80 83       	st	Z, r24
		break ;
		default:
		break ;
	}
	
}
 7ea:	0f 90       	pop	r0
 7ec:	0f 90       	pop	r0
 7ee:	0f 90       	pop	r0
 7f0:	0f 90       	pop	r0
 7f2:	cf 91       	pop	r28
 7f4:	df 91       	pop	r29
 7f6:	08 95       	ret

000007f8 <DIO_write_port>:
void DIO_write_port(unsigned char portname,unsigned char portvalue)
{
 7f8:	df 93       	push	r29
 7fa:	cf 93       	push	r28
 7fc:	00 d0       	rcall	.+0      	; 0x7fe <DIO_write_port+0x6>
 7fe:	00 d0       	rcall	.+0      	; 0x800 <DIO_write_port+0x8>
 800:	cd b7       	in	r28, 0x3d	; 61
 802:	de b7       	in	r29, 0x3e	; 62
 804:	89 83       	std	Y+1, r24	; 0x01
 806:	6a 83       	std	Y+2, r22	; 0x02
	switch(portname)
 808:	89 81       	ldd	r24, Y+1	; 0x01
 80a:	28 2f       	mov	r18, r24
 80c:	30 e0       	ldi	r19, 0x00	; 0
 80e:	3c 83       	std	Y+4, r19	; 0x04
 810:	2b 83       	std	Y+3, r18	; 0x03
 812:	8b 81       	ldd	r24, Y+3	; 0x03
 814:	9c 81       	ldd	r25, Y+4	; 0x04
 816:	82 34       	cpi	r24, 0x42	; 66
 818:	91 05       	cpc	r25, r1
 81a:	d9 f0       	breq	.+54     	; 0x852 <DIO_write_port+0x5a>
 81c:	2b 81       	ldd	r18, Y+3	; 0x03
 81e:	3c 81       	ldd	r19, Y+4	; 0x04
 820:	23 34       	cpi	r18, 0x43	; 67
 822:	31 05       	cpc	r19, r1
 824:	34 f4       	brge	.+12     	; 0x832 <DIO_write_port+0x3a>
 826:	8b 81       	ldd	r24, Y+3	; 0x03
 828:	9c 81       	ldd	r25, Y+4	; 0x04
 82a:	81 34       	cpi	r24, 0x41	; 65
 82c:	91 05       	cpc	r25, r1
 82e:	61 f0       	breq	.+24     	; 0x848 <DIO_write_port+0x50>
 830:	1e c0       	rjmp	.+60     	; 0x86e <__stack+0xf>
 832:	2b 81       	ldd	r18, Y+3	; 0x03
 834:	3c 81       	ldd	r19, Y+4	; 0x04
 836:	23 34       	cpi	r18, 0x43	; 67
 838:	31 05       	cpc	r19, r1
 83a:	81 f0       	breq	.+32     	; 0x85c <DIO_write_port+0x64>
 83c:	8b 81       	ldd	r24, Y+3	; 0x03
 83e:	9c 81       	ldd	r25, Y+4	; 0x04
 840:	84 34       	cpi	r24, 0x44	; 68
 842:	91 05       	cpc	r25, r1
 844:	81 f0       	breq	.+32     	; 0x866 <__stack+0x7>
 846:	13 c0       	rjmp	.+38     	; 0x86e <__stack+0xf>
	{
		case 'A' :
		PORTA=portvalue; //Write the given value to the port A
 848:	eb e3       	ldi	r30, 0x3B	; 59
 84a:	f0 e0       	ldi	r31, 0x00	; 0
 84c:	8a 81       	ldd	r24, Y+2	; 0x02
 84e:	80 83       	st	Z, r24
 850:	0e c0       	rjmp	.+28     	; 0x86e <__stack+0xf>
		break ;
		case 'B':
		PORTB=portvalue; //Write the given value to the port B
 852:	e8 e3       	ldi	r30, 0x38	; 56
 854:	f0 e0       	ldi	r31, 0x00	; 0
 856:	8a 81       	ldd	r24, Y+2	; 0x02
 858:	80 83       	st	Z, r24
 85a:	09 c0       	rjmp	.+18     	; 0x86e <__stack+0xf>
		break ;
		case 'C' :
		PORTC=portvalue; //Write the given value to the port C
 85c:	e5 e3       	ldi	r30, 0x35	; 53
 85e:	f0 e0       	ldi	r31, 0x00	; 0
 860:	8a 81       	ldd	r24, Y+2	; 0x02
 862:	80 83       	st	Z, r24
 864:	04 c0       	rjmp	.+8      	; 0x86e <__stack+0xf>
		break ;
		case 'D':
		PORTD=portvalue; //Write the given value to the port D
 866:	e2 e3       	ldi	r30, 0x32	; 50
 868:	f0 e0       	ldi	r31, 0x00	; 0
 86a:	8a 81       	ldd	r24, Y+2	; 0x02
 86c:	80 83       	st	Z, r24
		break ;
		default:
		 break ;
	}
}
 86e:	0f 90       	pop	r0
 870:	0f 90       	pop	r0
 872:	0f 90       	pop	r0
 874:	0f 90       	pop	r0
 876:	cf 91       	pop	r28
 878:	df 91       	pop	r29
 87a:	08 95       	ret

0000087c <DIO_read_port>:

unsigned char DIO_read_port(unsigned char portname)
{
 87c:	df 93       	push	r29
 87e:	cf 93       	push	r28
 880:	00 d0       	rcall	.+0      	; 0x882 <DIO_read_port+0x6>
 882:	00 d0       	rcall	.+0      	; 0x884 <DIO_read_port+0x8>
 884:	cd b7       	in	r28, 0x3d	; 61
 886:	de b7       	in	r29, 0x3e	; 62
 888:	8a 83       	std	Y+2, r24	; 0x02
	unsigned char return_val=0;
 88a:	19 82       	std	Y+1, r1	; 0x01
	switch(portname)
 88c:	8a 81       	ldd	r24, Y+2	; 0x02
 88e:	28 2f       	mov	r18, r24
 890:	30 e0       	ldi	r19, 0x00	; 0
 892:	3c 83       	std	Y+4, r19	; 0x04
 894:	2b 83       	std	Y+3, r18	; 0x03
 896:	8b 81       	ldd	r24, Y+3	; 0x03
 898:	9c 81       	ldd	r25, Y+4	; 0x04
 89a:	82 34       	cpi	r24, 0x42	; 66
 89c:	91 05       	cpc	r25, r1
 89e:	d9 f0       	breq	.+54     	; 0x8d6 <DIO_read_port+0x5a>
 8a0:	2b 81       	ldd	r18, Y+3	; 0x03
 8a2:	3c 81       	ldd	r19, Y+4	; 0x04
 8a4:	23 34       	cpi	r18, 0x43	; 67
 8a6:	31 05       	cpc	r19, r1
 8a8:	34 f4       	brge	.+12     	; 0x8b6 <DIO_read_port+0x3a>
 8aa:	8b 81       	ldd	r24, Y+3	; 0x03
 8ac:	9c 81       	ldd	r25, Y+4	; 0x04
 8ae:	81 34       	cpi	r24, 0x41	; 65
 8b0:	91 05       	cpc	r25, r1
 8b2:	61 f0       	breq	.+24     	; 0x8cc <DIO_read_port+0x50>
 8b4:	1e c0       	rjmp	.+60     	; 0x8f2 <DIO_read_port+0x76>
 8b6:	2b 81       	ldd	r18, Y+3	; 0x03
 8b8:	3c 81       	ldd	r19, Y+4	; 0x04
 8ba:	23 34       	cpi	r18, 0x43	; 67
 8bc:	31 05       	cpc	r19, r1
 8be:	81 f0       	breq	.+32     	; 0x8e0 <DIO_read_port+0x64>
 8c0:	8b 81       	ldd	r24, Y+3	; 0x03
 8c2:	9c 81       	ldd	r25, Y+4	; 0x04
 8c4:	84 34       	cpi	r24, 0x44	; 68
 8c6:	91 05       	cpc	r25, r1
 8c8:	81 f0       	breq	.+32     	; 0x8ea <DIO_read_port+0x6e>
 8ca:	13 c0       	rjmp	.+38     	; 0x8f2 <DIO_read_port+0x76>
	{
		case 'A' :
		return_val=PINA; // read the value of port A 
 8cc:	e9 e3       	ldi	r30, 0x39	; 57
 8ce:	f0 e0       	ldi	r31, 0x00	; 0
 8d0:	80 81       	ld	r24, Z
 8d2:	89 83       	std	Y+1, r24	; 0x01
 8d4:	0e c0       	rjmp	.+28     	; 0x8f2 <DIO_read_port+0x76>
		break ;
		case 'B':
		return_val=PINB; // read the value of port B 
 8d6:	e6 e3       	ldi	r30, 0x36	; 54
 8d8:	f0 e0       	ldi	r31, 0x00	; 0
 8da:	80 81       	ld	r24, Z
 8dc:	89 83       	std	Y+1, r24	; 0x01
 8de:	09 c0       	rjmp	.+18     	; 0x8f2 <DIO_read_port+0x76>
		break ;
		case 'C' :
		return_val=PINC; // read the value of port C 
 8e0:	e3 e3       	ldi	r30, 0x33	; 51
 8e2:	f0 e0       	ldi	r31, 0x00	; 0
 8e4:	80 81       	ld	r24, Z
 8e6:	89 83       	std	Y+1, r24	; 0x01
 8e8:	04 c0       	rjmp	.+8      	; 0x8f2 <DIO_read_port+0x76>
		break ;
		case 'D':
		return_val=PIND; // read the value of port D 
 8ea:	e0 e3       	ldi	r30, 0x30	; 48
 8ec:	f0 e0       	ldi	r31, 0x00	; 0
 8ee:	80 81       	ld	r24, Z
 8f0:	89 83       	std	Y+1, r24	; 0x01
		break ;
		default:
		break ;
	}
	return return_val;
 8f2:	89 81       	ldd	r24, Y+1	; 0x01
}
 8f4:	0f 90       	pop	r0
 8f6:	0f 90       	pop	r0
 8f8:	0f 90       	pop	r0
 8fa:	0f 90       	pop	r0
 8fc:	cf 91       	pop	r28
 8fe:	df 91       	pop	r29
 900:	08 95       	ret

00000902 <DIO_vconnectpullup>:

void DIO_vconnectpullup(char portname ,char pinnumber, char connect_pullup)
{
 902:	df 93       	push	r29
 904:	cf 93       	push	r28
 906:	00 d0       	rcall	.+0      	; 0x908 <DIO_vconnectpullup+0x6>
 908:	00 d0       	rcall	.+0      	; 0x90a <DIO_vconnectpullup+0x8>
 90a:	0f 92       	push	r0
 90c:	cd b7       	in	r28, 0x3d	; 61
 90e:	de b7       	in	r29, 0x3e	; 62
 910:	89 83       	std	Y+1, r24	; 0x01
 912:	6a 83       	std	Y+2, r22	; 0x02
 914:	4b 83       	std	Y+3, r20	; 0x03
	switch(portname)
 916:	89 81       	ldd	r24, Y+1	; 0x01
 918:	28 2f       	mov	r18, r24
 91a:	30 e0       	ldi	r19, 0x00	; 0
 91c:	3d 83       	std	Y+5, r19	; 0x05
 91e:	2c 83       	std	Y+4, r18	; 0x04
 920:	8c 81       	ldd	r24, Y+4	; 0x04
 922:	9d 81       	ldd	r25, Y+5	; 0x05
 924:	82 34       	cpi	r24, 0x42	; 66
 926:	91 05       	cpc	r25, r1
 928:	09 f4       	brne	.+2      	; 0x92c <DIO_vconnectpullup+0x2a>
 92a:	44 c0       	rjmp	.+136    	; 0x9b4 <DIO_vconnectpullup+0xb2>
 92c:	2c 81       	ldd	r18, Y+4	; 0x04
 92e:	3d 81       	ldd	r19, Y+5	; 0x05
 930:	23 34       	cpi	r18, 0x43	; 67
 932:	31 05       	cpc	r19, r1
 934:	34 f4       	brge	.+12     	; 0x942 <DIO_vconnectpullup+0x40>
 936:	8c 81       	ldd	r24, Y+4	; 0x04
 938:	9d 81       	ldd	r25, Y+5	; 0x05
 93a:	81 34       	cpi	r24, 0x41	; 65
 93c:	91 05       	cpc	r25, r1
 93e:	71 f0       	breq	.+28     	; 0x95c <DIO_vconnectpullup+0x5a>
 940:	bc c0       	rjmp	.+376    	; 0xaba <DIO_vconnectpullup+0x1b8>
 942:	2c 81       	ldd	r18, Y+4	; 0x04
 944:	3d 81       	ldd	r19, Y+5	; 0x05
 946:	23 34       	cpi	r18, 0x43	; 67
 948:	31 05       	cpc	r19, r1
 94a:	09 f4       	brne	.+2      	; 0x94e <DIO_vconnectpullup+0x4c>
 94c:	5f c0       	rjmp	.+190    	; 0xa0c <DIO_vconnectpullup+0x10a>
 94e:	8c 81       	ldd	r24, Y+4	; 0x04
 950:	9d 81       	ldd	r25, Y+5	; 0x05
 952:	84 34       	cpi	r24, 0x44	; 68
 954:	91 05       	cpc	r25, r1
 956:	09 f4       	brne	.+2      	; 0x95a <DIO_vconnectpullup+0x58>
 958:	85 c0       	rjmp	.+266    	; 0xa64 <DIO_vconnectpullup+0x162>
 95a:	af c0       	rjmp	.+350    	; 0xaba <DIO_vconnectpullup+0x1b8>
	{
		case 'A':
		if(connect_pullup==1)
 95c:	8b 81       	ldd	r24, Y+3	; 0x03
 95e:	81 30       	cpi	r24, 0x01	; 1
 960:	a1 f4       	brne	.+40     	; 0x98a <DIO_vconnectpullup+0x88>
		{
			SET_BIT(PORTA,pinnumber);
 962:	ab e3       	ldi	r26, 0x3B	; 59
 964:	b0 e0       	ldi	r27, 0x00	; 0
 966:	eb e3       	ldi	r30, 0x3B	; 59
 968:	f0 e0       	ldi	r31, 0x00	; 0
 96a:	80 81       	ld	r24, Z
 96c:	48 2f       	mov	r20, r24
 96e:	8a 81       	ldd	r24, Y+2	; 0x02
 970:	28 2f       	mov	r18, r24
 972:	30 e0       	ldi	r19, 0x00	; 0
 974:	81 e0       	ldi	r24, 0x01	; 1
 976:	90 e0       	ldi	r25, 0x00	; 0
 978:	02 2e       	mov	r0, r18
 97a:	02 c0       	rjmp	.+4      	; 0x980 <DIO_vconnectpullup+0x7e>
 97c:	88 0f       	add	r24, r24
 97e:	99 1f       	adc	r25, r25
 980:	0a 94       	dec	r0
 982:	e2 f7       	brpl	.-8      	; 0x97c <DIO_vconnectpullup+0x7a>
 984:	84 2b       	or	r24, r20
 986:	8c 93       	st	X, r24
 988:	98 c0       	rjmp	.+304    	; 0xaba <DIO_vconnectpullup+0x1b8>
		}
		else
		{
			CLR_BIT(PORTA,pinnumber);
 98a:	ab e3       	ldi	r26, 0x3B	; 59
 98c:	b0 e0       	ldi	r27, 0x00	; 0
 98e:	eb e3       	ldi	r30, 0x3B	; 59
 990:	f0 e0       	ldi	r31, 0x00	; 0
 992:	80 81       	ld	r24, Z
 994:	48 2f       	mov	r20, r24
 996:	8a 81       	ldd	r24, Y+2	; 0x02
 998:	28 2f       	mov	r18, r24
 99a:	30 e0       	ldi	r19, 0x00	; 0
 99c:	81 e0       	ldi	r24, 0x01	; 1
 99e:	90 e0       	ldi	r25, 0x00	; 0
 9a0:	02 2e       	mov	r0, r18
 9a2:	02 c0       	rjmp	.+4      	; 0x9a8 <DIO_vconnectpullup+0xa6>
 9a4:	88 0f       	add	r24, r24
 9a6:	99 1f       	adc	r25, r25
 9a8:	0a 94       	dec	r0
 9aa:	e2 f7       	brpl	.-8      	; 0x9a4 <DIO_vconnectpullup+0xa2>
 9ac:	80 95       	com	r24
 9ae:	84 23       	and	r24, r20
 9b0:	8c 93       	st	X, r24
 9b2:	83 c0       	rjmp	.+262    	; 0xaba <DIO_vconnectpullup+0x1b8>
		}
		break;
		case 'B':
		if(connect_pullup==1)
 9b4:	8b 81       	ldd	r24, Y+3	; 0x03
 9b6:	81 30       	cpi	r24, 0x01	; 1
 9b8:	a1 f4       	brne	.+40     	; 0x9e2 <DIO_vconnectpullup+0xe0>
		{
			SET_BIT(PORTB,pinnumber);
 9ba:	a8 e3       	ldi	r26, 0x38	; 56
 9bc:	b0 e0       	ldi	r27, 0x00	; 0
 9be:	e8 e3       	ldi	r30, 0x38	; 56
 9c0:	f0 e0       	ldi	r31, 0x00	; 0
 9c2:	80 81       	ld	r24, Z
 9c4:	48 2f       	mov	r20, r24
 9c6:	8a 81       	ldd	r24, Y+2	; 0x02
 9c8:	28 2f       	mov	r18, r24
 9ca:	30 e0       	ldi	r19, 0x00	; 0
 9cc:	81 e0       	ldi	r24, 0x01	; 1
 9ce:	90 e0       	ldi	r25, 0x00	; 0
 9d0:	02 2e       	mov	r0, r18
 9d2:	02 c0       	rjmp	.+4      	; 0x9d8 <DIO_vconnectpullup+0xd6>
 9d4:	88 0f       	add	r24, r24
 9d6:	99 1f       	adc	r25, r25
 9d8:	0a 94       	dec	r0
 9da:	e2 f7       	brpl	.-8      	; 0x9d4 <DIO_vconnectpullup+0xd2>
 9dc:	84 2b       	or	r24, r20
 9de:	8c 93       	st	X, r24
 9e0:	6c c0       	rjmp	.+216    	; 0xaba <DIO_vconnectpullup+0x1b8>
		}
		else
		{
			CLR_BIT(PORTB,pinnumber);
 9e2:	a8 e3       	ldi	r26, 0x38	; 56
 9e4:	b0 e0       	ldi	r27, 0x00	; 0
 9e6:	e8 e3       	ldi	r30, 0x38	; 56
 9e8:	f0 e0       	ldi	r31, 0x00	; 0
 9ea:	80 81       	ld	r24, Z
 9ec:	48 2f       	mov	r20, r24
 9ee:	8a 81       	ldd	r24, Y+2	; 0x02
 9f0:	28 2f       	mov	r18, r24
 9f2:	30 e0       	ldi	r19, 0x00	; 0
 9f4:	81 e0       	ldi	r24, 0x01	; 1
 9f6:	90 e0       	ldi	r25, 0x00	; 0
 9f8:	02 2e       	mov	r0, r18
 9fa:	02 c0       	rjmp	.+4      	; 0xa00 <DIO_vconnectpullup+0xfe>
 9fc:	88 0f       	add	r24, r24
 9fe:	99 1f       	adc	r25, r25
 a00:	0a 94       	dec	r0
 a02:	e2 f7       	brpl	.-8      	; 0x9fc <DIO_vconnectpullup+0xfa>
 a04:	80 95       	com	r24
 a06:	84 23       	and	r24, r20
 a08:	8c 93       	st	X, r24
 a0a:	57 c0       	rjmp	.+174    	; 0xaba <DIO_vconnectpullup+0x1b8>
		}
		break;
		case 'C':
		if(connect_pullup==1)
 a0c:	8b 81       	ldd	r24, Y+3	; 0x03
 a0e:	81 30       	cpi	r24, 0x01	; 1
 a10:	a1 f4       	brne	.+40     	; 0xa3a <DIO_vconnectpullup+0x138>
		{
			SET_BIT(PORTC,pinnumber);
 a12:	a5 e3       	ldi	r26, 0x35	; 53
 a14:	b0 e0       	ldi	r27, 0x00	; 0
 a16:	e5 e3       	ldi	r30, 0x35	; 53
 a18:	f0 e0       	ldi	r31, 0x00	; 0
 a1a:	80 81       	ld	r24, Z
 a1c:	48 2f       	mov	r20, r24
 a1e:	8a 81       	ldd	r24, Y+2	; 0x02
 a20:	28 2f       	mov	r18, r24
 a22:	30 e0       	ldi	r19, 0x00	; 0
 a24:	81 e0       	ldi	r24, 0x01	; 1
 a26:	90 e0       	ldi	r25, 0x00	; 0
 a28:	02 2e       	mov	r0, r18
 a2a:	02 c0       	rjmp	.+4      	; 0xa30 <DIO_vconnectpullup+0x12e>
 a2c:	88 0f       	add	r24, r24
 a2e:	99 1f       	adc	r25, r25
 a30:	0a 94       	dec	r0
 a32:	e2 f7       	brpl	.-8      	; 0xa2c <DIO_vconnectpullup+0x12a>
 a34:	84 2b       	or	r24, r20
 a36:	8c 93       	st	X, r24
 a38:	40 c0       	rjmp	.+128    	; 0xaba <DIO_vconnectpullup+0x1b8>
			
		}
		else
		{
			CLR_BIT(PORTC,pinnumber);
 a3a:	a5 e3       	ldi	r26, 0x35	; 53
 a3c:	b0 e0       	ldi	r27, 0x00	; 0
 a3e:	e5 e3       	ldi	r30, 0x35	; 53
 a40:	f0 e0       	ldi	r31, 0x00	; 0
 a42:	80 81       	ld	r24, Z
 a44:	48 2f       	mov	r20, r24
 a46:	8a 81       	ldd	r24, Y+2	; 0x02
 a48:	28 2f       	mov	r18, r24
 a4a:	30 e0       	ldi	r19, 0x00	; 0
 a4c:	81 e0       	ldi	r24, 0x01	; 1
 a4e:	90 e0       	ldi	r25, 0x00	; 0
 a50:	02 2e       	mov	r0, r18
 a52:	02 c0       	rjmp	.+4      	; 0xa58 <DIO_vconnectpullup+0x156>
 a54:	88 0f       	add	r24, r24
 a56:	99 1f       	adc	r25, r25
 a58:	0a 94       	dec	r0
 a5a:	e2 f7       	brpl	.-8      	; 0xa54 <DIO_vconnectpullup+0x152>
 a5c:	80 95       	com	r24
 a5e:	84 23       	and	r24, r20
 a60:	8c 93       	st	X, r24
 a62:	2b c0       	rjmp	.+86     	; 0xaba <DIO_vconnectpullup+0x1b8>
		}
		break;
		case 'D':
		if(connect_pullup==1)
 a64:	8b 81       	ldd	r24, Y+3	; 0x03
 a66:	81 30       	cpi	r24, 0x01	; 1
 a68:	a1 f4       	brne	.+40     	; 0xa92 <DIO_vconnectpullup+0x190>
		{
			SET_BIT(PORTD,pinnumber);
 a6a:	a2 e3       	ldi	r26, 0x32	; 50
 a6c:	b0 e0       	ldi	r27, 0x00	; 0
 a6e:	e2 e3       	ldi	r30, 0x32	; 50
 a70:	f0 e0       	ldi	r31, 0x00	; 0
 a72:	80 81       	ld	r24, Z
 a74:	48 2f       	mov	r20, r24
 a76:	8a 81       	ldd	r24, Y+2	; 0x02
 a78:	28 2f       	mov	r18, r24
 a7a:	30 e0       	ldi	r19, 0x00	; 0
 a7c:	81 e0       	ldi	r24, 0x01	; 1
 a7e:	90 e0       	ldi	r25, 0x00	; 0
 a80:	02 2e       	mov	r0, r18
 a82:	02 c0       	rjmp	.+4      	; 0xa88 <DIO_vconnectpullup+0x186>
 a84:	88 0f       	add	r24, r24
 a86:	99 1f       	adc	r25, r25
 a88:	0a 94       	dec	r0
 a8a:	e2 f7       	brpl	.-8      	; 0xa84 <DIO_vconnectpullup+0x182>
 a8c:	84 2b       	or	r24, r20
 a8e:	8c 93       	st	X, r24
 a90:	14 c0       	rjmp	.+40     	; 0xaba <DIO_vconnectpullup+0x1b8>
			
		}
		else
		{
			CLR_BIT(PORTD,pinnumber);
 a92:	a2 e3       	ldi	r26, 0x32	; 50
 a94:	b0 e0       	ldi	r27, 0x00	; 0
 a96:	e2 e3       	ldi	r30, 0x32	; 50
 a98:	f0 e0       	ldi	r31, 0x00	; 0
 a9a:	80 81       	ld	r24, Z
 a9c:	48 2f       	mov	r20, r24
 a9e:	8a 81       	ldd	r24, Y+2	; 0x02
 aa0:	28 2f       	mov	r18, r24
 aa2:	30 e0       	ldi	r19, 0x00	; 0
 aa4:	81 e0       	ldi	r24, 0x01	; 1
 aa6:	90 e0       	ldi	r25, 0x00	; 0
 aa8:	02 2e       	mov	r0, r18
 aaa:	02 c0       	rjmp	.+4      	; 0xab0 <DIO_vconnectpullup+0x1ae>
 aac:	88 0f       	add	r24, r24
 aae:	99 1f       	adc	r25, r25
 ab0:	0a 94       	dec	r0
 ab2:	e2 f7       	brpl	.-8      	; 0xaac <DIO_vconnectpullup+0x1aa>
 ab4:	80 95       	com	r24
 ab6:	84 23       	and	r24, r20
 ab8:	8c 93       	st	X, r24
		}
		break;
		
	}
}
 aba:	0f 90       	pop	r0
 abc:	0f 90       	pop	r0
 abe:	0f 90       	pop	r0
 ac0:	0f 90       	pop	r0
 ac2:	0f 90       	pop	r0
 ac4:	cf 91       	pop	r28
 ac6:	df 91       	pop	r29
 ac8:	08 95       	ret

00000aca <write_low_nibble>:

void write_low_nibble(unsigned char portname,unsigned char value)
{
 aca:	df 93       	push	r29
 acc:	cf 93       	push	r28
 ace:	00 d0       	rcall	.+0      	; 0xad0 <write_low_nibble+0x6>
 ad0:	00 d0       	rcall	.+0      	; 0xad2 <write_low_nibble+0x8>
 ad2:	cd b7       	in	r28, 0x3d	; 61
 ad4:	de b7       	in	r29, 0x3e	; 62
 ad6:	89 83       	std	Y+1, r24	; 0x01
 ad8:	6a 83       	std	Y+2, r22	; 0x02
	value&=0x0f;
 ada:	8a 81       	ldd	r24, Y+2	; 0x02
 adc:	8f 70       	andi	r24, 0x0F	; 15
 ade:	8a 83       	std	Y+2, r24	; 0x02
	switch(portname)
 ae0:	89 81       	ldd	r24, Y+1	; 0x01
 ae2:	28 2f       	mov	r18, r24
 ae4:	30 e0       	ldi	r19, 0x00	; 0
 ae6:	3c 83       	std	Y+4, r19	; 0x04
 ae8:	2b 83       	std	Y+3, r18	; 0x03
 aea:	8b 81       	ldd	r24, Y+3	; 0x03
 aec:	9c 81       	ldd	r25, Y+4	; 0x04
 aee:	82 34       	cpi	r24, 0x42	; 66
 af0:	91 05       	cpc	r25, r1
 af2:	29 f1       	breq	.+74     	; 0xb3e <write_low_nibble+0x74>
 af4:	2b 81       	ldd	r18, Y+3	; 0x03
 af6:	3c 81       	ldd	r19, Y+4	; 0x04
 af8:	23 34       	cpi	r18, 0x43	; 67
 afa:	31 05       	cpc	r19, r1
 afc:	34 f4       	brge	.+12     	; 0xb0a <write_low_nibble+0x40>
 afe:	8b 81       	ldd	r24, Y+3	; 0x03
 b00:	9c 81       	ldd	r25, Y+4	; 0x04
 b02:	81 34       	cpi	r24, 0x41	; 65
 b04:	91 05       	cpc	r25, r1
 b06:	61 f0       	breq	.+24     	; 0xb20 <write_low_nibble+0x56>
 b08:	47 c0       	rjmp	.+142    	; 0xb98 <write_low_nibble+0xce>
 b0a:	2b 81       	ldd	r18, Y+3	; 0x03
 b0c:	3c 81       	ldd	r19, Y+4	; 0x04
 b0e:	23 34       	cpi	r18, 0x43	; 67
 b10:	31 05       	cpc	r19, r1
 b12:	21 f1       	breq	.+72     	; 0xb5c <write_low_nibble+0x92>
 b14:	8b 81       	ldd	r24, Y+3	; 0x03
 b16:	9c 81       	ldd	r25, Y+4	; 0x04
 b18:	84 34       	cpi	r24, 0x44	; 68
 b1a:	91 05       	cpc	r25, r1
 b1c:	71 f1       	breq	.+92     	; 0xb7a <write_low_nibble+0xb0>
 b1e:	3c c0       	rjmp	.+120    	; 0xb98 <write_low_nibble+0xce>
	{
		case 'A':
		PORTA&=0xf0;
 b20:	ab e3       	ldi	r26, 0x3B	; 59
 b22:	b0 e0       	ldi	r27, 0x00	; 0
 b24:	eb e3       	ldi	r30, 0x3B	; 59
 b26:	f0 e0       	ldi	r31, 0x00	; 0
 b28:	80 81       	ld	r24, Z
 b2a:	80 7f       	andi	r24, 0xF0	; 240
 b2c:	8c 93       	st	X, r24
		PORTA|=value;
 b2e:	ab e3       	ldi	r26, 0x3B	; 59
 b30:	b0 e0       	ldi	r27, 0x00	; 0
 b32:	eb e3       	ldi	r30, 0x3B	; 59
 b34:	f0 e0       	ldi	r31, 0x00	; 0
 b36:	90 81       	ld	r25, Z
 b38:	8a 81       	ldd	r24, Y+2	; 0x02
 b3a:	89 2b       	or	r24, r25
 b3c:	8c 93       	st	X, r24
		case 'B':
		PORTB&=0xf0;
 b3e:	a8 e3       	ldi	r26, 0x38	; 56
 b40:	b0 e0       	ldi	r27, 0x00	; 0
 b42:	e8 e3       	ldi	r30, 0x38	; 56
 b44:	f0 e0       	ldi	r31, 0x00	; 0
 b46:	80 81       	ld	r24, Z
 b48:	80 7f       	andi	r24, 0xF0	; 240
 b4a:	8c 93       	st	X, r24
		PORTB|=value;
 b4c:	a8 e3       	ldi	r26, 0x38	; 56
 b4e:	b0 e0       	ldi	r27, 0x00	; 0
 b50:	e8 e3       	ldi	r30, 0x38	; 56
 b52:	f0 e0       	ldi	r31, 0x00	; 0
 b54:	90 81       	ld	r25, Z
 b56:	8a 81       	ldd	r24, Y+2	; 0x02
 b58:	89 2b       	or	r24, r25
 b5a:	8c 93       	st	X, r24
		case 'C':
		PORTC&=0xf0;
 b5c:	a5 e3       	ldi	r26, 0x35	; 53
 b5e:	b0 e0       	ldi	r27, 0x00	; 0
 b60:	e5 e3       	ldi	r30, 0x35	; 53
 b62:	f0 e0       	ldi	r31, 0x00	; 0
 b64:	80 81       	ld	r24, Z
 b66:	80 7f       	andi	r24, 0xF0	; 240
 b68:	8c 93       	st	X, r24
		PORTC|=value;
 b6a:	a5 e3       	ldi	r26, 0x35	; 53
 b6c:	b0 e0       	ldi	r27, 0x00	; 0
 b6e:	e5 e3       	ldi	r30, 0x35	; 53
 b70:	f0 e0       	ldi	r31, 0x00	; 0
 b72:	90 81       	ld	r25, Z
 b74:	8a 81       	ldd	r24, Y+2	; 0x02
 b76:	89 2b       	or	r24, r25
 b78:	8c 93       	st	X, r24
		case 'D':
		PORTD&=0xf0;
 b7a:	a2 e3       	ldi	r26, 0x32	; 50
 b7c:	b0 e0       	ldi	r27, 0x00	; 0
 b7e:	e2 e3       	ldi	r30, 0x32	; 50
 b80:	f0 e0       	ldi	r31, 0x00	; 0
 b82:	80 81       	ld	r24, Z
 b84:	80 7f       	andi	r24, 0xF0	; 240
 b86:	8c 93       	st	X, r24
		PORTD|=value;
 b88:	a2 e3       	ldi	r26, 0x32	; 50
 b8a:	b0 e0       	ldi	r27, 0x00	; 0
 b8c:	e2 e3       	ldi	r30, 0x32	; 50
 b8e:	f0 e0       	ldi	r31, 0x00	; 0
 b90:	90 81       	ld	r25, Z
 b92:	8a 81       	ldd	r24, Y+2	; 0x02
 b94:	89 2b       	or	r24, r25
 b96:	8c 93       	st	X, r24
	}
}
 b98:	0f 90       	pop	r0
 b9a:	0f 90       	pop	r0
 b9c:	0f 90       	pop	r0
 b9e:	0f 90       	pop	r0
 ba0:	cf 91       	pop	r28
 ba2:	df 91       	pop	r29
 ba4:	08 95       	ret

00000ba6 <write_high_nibble>:

void write_high_nibble(unsigned char portname,unsigned char value)
{
 ba6:	df 93       	push	r29
 ba8:	cf 93       	push	r28
 baa:	00 d0       	rcall	.+0      	; 0xbac <write_high_nibble+0x6>
 bac:	00 d0       	rcall	.+0      	; 0xbae <write_high_nibble+0x8>
 bae:	cd b7       	in	r28, 0x3d	; 61
 bb0:	de b7       	in	r29, 0x3e	; 62
 bb2:	89 83       	std	Y+1, r24	; 0x01
 bb4:	6a 83       	std	Y+2, r22	; 0x02
	value<<=4;
 bb6:	8a 81       	ldd	r24, Y+2	; 0x02
 bb8:	82 95       	swap	r24
 bba:	80 7f       	andi	r24, 0xF0	; 240
 bbc:	8a 83       	std	Y+2, r24	; 0x02
	switch(portname)
 bbe:	89 81       	ldd	r24, Y+1	; 0x01
 bc0:	28 2f       	mov	r18, r24
 bc2:	30 e0       	ldi	r19, 0x00	; 0
 bc4:	3c 83       	std	Y+4, r19	; 0x04
 bc6:	2b 83       	std	Y+3, r18	; 0x03
 bc8:	8b 81       	ldd	r24, Y+3	; 0x03
 bca:	9c 81       	ldd	r25, Y+4	; 0x04
 bcc:	82 34       	cpi	r24, 0x42	; 66
 bce:	91 05       	cpc	r25, r1
 bd0:	29 f1       	breq	.+74     	; 0xc1c <write_high_nibble+0x76>
 bd2:	2b 81       	ldd	r18, Y+3	; 0x03
 bd4:	3c 81       	ldd	r19, Y+4	; 0x04
 bd6:	23 34       	cpi	r18, 0x43	; 67
 bd8:	31 05       	cpc	r19, r1
 bda:	34 f4       	brge	.+12     	; 0xbe8 <write_high_nibble+0x42>
 bdc:	8b 81       	ldd	r24, Y+3	; 0x03
 bde:	9c 81       	ldd	r25, Y+4	; 0x04
 be0:	81 34       	cpi	r24, 0x41	; 65
 be2:	91 05       	cpc	r25, r1
 be4:	61 f0       	breq	.+24     	; 0xbfe <write_high_nibble+0x58>
 be6:	47 c0       	rjmp	.+142    	; 0xc76 <write_high_nibble+0xd0>
 be8:	2b 81       	ldd	r18, Y+3	; 0x03
 bea:	3c 81       	ldd	r19, Y+4	; 0x04
 bec:	23 34       	cpi	r18, 0x43	; 67
 bee:	31 05       	cpc	r19, r1
 bf0:	21 f1       	breq	.+72     	; 0xc3a <write_high_nibble+0x94>
 bf2:	8b 81       	ldd	r24, Y+3	; 0x03
 bf4:	9c 81       	ldd	r25, Y+4	; 0x04
 bf6:	84 34       	cpi	r24, 0x44	; 68
 bf8:	91 05       	cpc	r25, r1
 bfa:	71 f1       	breq	.+92     	; 0xc58 <write_high_nibble+0xb2>
 bfc:	3c c0       	rjmp	.+120    	; 0xc76 <write_high_nibble+0xd0>
	{
		case 'A':
		PORTA&=0x0f;
 bfe:	ab e3       	ldi	r26, 0x3B	; 59
 c00:	b0 e0       	ldi	r27, 0x00	; 0
 c02:	eb e3       	ldi	r30, 0x3B	; 59
 c04:	f0 e0       	ldi	r31, 0x00	; 0
 c06:	80 81       	ld	r24, Z
 c08:	8f 70       	andi	r24, 0x0F	; 15
 c0a:	8c 93       	st	X, r24
		PORTA|=value;
 c0c:	ab e3       	ldi	r26, 0x3B	; 59
 c0e:	b0 e0       	ldi	r27, 0x00	; 0
 c10:	eb e3       	ldi	r30, 0x3B	; 59
 c12:	f0 e0       	ldi	r31, 0x00	; 0
 c14:	90 81       	ld	r25, Z
 c16:	8a 81       	ldd	r24, Y+2	; 0x02
 c18:	89 2b       	or	r24, r25
 c1a:	8c 93       	st	X, r24
		case 'B':
		PORTB&=0x0f;
 c1c:	a8 e3       	ldi	r26, 0x38	; 56
 c1e:	b0 e0       	ldi	r27, 0x00	; 0
 c20:	e8 e3       	ldi	r30, 0x38	; 56
 c22:	f0 e0       	ldi	r31, 0x00	; 0
 c24:	80 81       	ld	r24, Z
 c26:	8f 70       	andi	r24, 0x0F	; 15
 c28:	8c 93       	st	X, r24
		PORTB|=value;
 c2a:	a8 e3       	ldi	r26, 0x38	; 56
 c2c:	b0 e0       	ldi	r27, 0x00	; 0
 c2e:	e8 e3       	ldi	r30, 0x38	; 56
 c30:	f0 e0       	ldi	r31, 0x00	; 0
 c32:	90 81       	ld	r25, Z
 c34:	8a 81       	ldd	r24, Y+2	; 0x02
 c36:	89 2b       	or	r24, r25
 c38:	8c 93       	st	X, r24
		case 'C':
		PORTC&=0x0f;
 c3a:	a5 e3       	ldi	r26, 0x35	; 53
 c3c:	b0 e0       	ldi	r27, 0x00	; 0
 c3e:	e5 e3       	ldi	r30, 0x35	; 53
 c40:	f0 e0       	ldi	r31, 0x00	; 0
 c42:	80 81       	ld	r24, Z
 c44:	8f 70       	andi	r24, 0x0F	; 15
 c46:	8c 93       	st	X, r24
		PORTC|=value;
 c48:	a5 e3       	ldi	r26, 0x35	; 53
 c4a:	b0 e0       	ldi	r27, 0x00	; 0
 c4c:	e5 e3       	ldi	r30, 0x35	; 53
 c4e:	f0 e0       	ldi	r31, 0x00	; 0
 c50:	90 81       	ld	r25, Z
 c52:	8a 81       	ldd	r24, Y+2	; 0x02
 c54:	89 2b       	or	r24, r25
 c56:	8c 93       	st	X, r24
		case 'D':
		PORTD&=0x0f;
 c58:	a2 e3       	ldi	r26, 0x32	; 50
 c5a:	b0 e0       	ldi	r27, 0x00	; 0
 c5c:	e2 e3       	ldi	r30, 0x32	; 50
 c5e:	f0 e0       	ldi	r31, 0x00	; 0
 c60:	80 81       	ld	r24, Z
 c62:	8f 70       	andi	r24, 0x0F	; 15
 c64:	8c 93       	st	X, r24
		PORTD|=value;
 c66:	a2 e3       	ldi	r26, 0x32	; 50
 c68:	b0 e0       	ldi	r27, 0x00	; 0
 c6a:	e2 e3       	ldi	r30, 0x32	; 50
 c6c:	f0 e0       	ldi	r31, 0x00	; 0
 c6e:	90 81       	ld	r25, Z
 c70:	8a 81       	ldd	r24, Y+2	; 0x02
 c72:	89 2b       	or	r24, r25
 c74:	8c 93       	st	X, r24
	}
 c76:	0f 90       	pop	r0
 c78:	0f 90       	pop	r0
 c7a:	0f 90       	pop	r0
 c7c:	0f 90       	pop	r0
 c7e:	cf 91       	pop	r28
 c80:	df 91       	pop	r29
 c82:	08 95       	ret

00000c84 <LED_vInit>:
* Created: 2/9/2018 7:16:44 PM
*  Author: Mohamed Zaghlol
*/
#include "DIO.h"
void LED_vInit(unsigned char portname,unsigned char pinnumber)
{
 c84:	df 93       	push	r29
 c86:	cf 93       	push	r28
 c88:	00 d0       	rcall	.+0      	; 0xc8a <LED_vInit+0x6>
 c8a:	cd b7       	in	r28, 0x3d	; 61
 c8c:	de b7       	in	r29, 0x3e	; 62
 c8e:	89 83       	std	Y+1, r24	; 0x01
 c90:	6a 83       	std	Y+2, r22	; 0x02
	DIO_vsetPINDir(portname,pinnumber,1);//Set the given pin in the given port as an output
 c92:	89 81       	ldd	r24, Y+1	; 0x01
 c94:	6a 81       	ldd	r22, Y+2	; 0x02
 c96:	41 e0       	ldi	r20, 0x01	; 1
 c98:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_vsetPINDir>
}
 c9c:	0f 90       	pop	r0
 c9e:	0f 90       	pop	r0
 ca0:	cf 91       	pop	r28
 ca2:	df 91       	pop	r29
 ca4:	08 95       	ret

00000ca6 <LED_vTurnOn>:
void LED_vTurnOn(unsigned char portname,unsigned char pinnumber)
{
 ca6:	df 93       	push	r29
 ca8:	cf 93       	push	r28
 caa:	00 d0       	rcall	.+0      	; 0xcac <LED_vTurnOn+0x6>
 cac:	cd b7       	in	r28, 0x3d	; 61
 cae:	de b7       	in	r29, 0x3e	; 62
 cb0:	89 83       	std	Y+1, r24	; 0x01
 cb2:	6a 83       	std	Y+2, r22	; 0x02
	DIO_write(portname,pinnumber,1);//Set the given pin in the given port to one(on)
 cb4:	89 81       	ldd	r24, Y+1	; 0x01
 cb6:	6a 81       	ldd	r22, Y+2	; 0x02
 cb8:	41 e0       	ldi	r20, 0x01	; 1
 cba:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_write>
}
 cbe:	0f 90       	pop	r0
 cc0:	0f 90       	pop	r0
 cc2:	cf 91       	pop	r28
 cc4:	df 91       	pop	r29
 cc6:	08 95       	ret

00000cc8 <LED_vTurnOff>:
void LED_vTurnOff(unsigned char portname,unsigned char pinnumber)
{
 cc8:	df 93       	push	r29
 cca:	cf 93       	push	r28
 ccc:	00 d0       	rcall	.+0      	; 0xcce <LED_vTurnOff+0x6>
 cce:	cd b7       	in	r28, 0x3d	; 61
 cd0:	de b7       	in	r29, 0x3e	; 62
 cd2:	89 83       	std	Y+1, r24	; 0x01
 cd4:	6a 83       	std	Y+2, r22	; 0x02
	DIO_write(portname,pinnumber,0);//Set the given pin in the given port to zero(off)
 cd6:	89 81       	ldd	r24, Y+1	; 0x01
 cd8:	6a 81       	ldd	r22, Y+2	; 0x02
 cda:	40 e0       	ldi	r20, 0x00	; 0
 cdc:	0e 94 ac 01 	call	0x358	; 0x358 <DIO_write>
}
 ce0:	0f 90       	pop	r0
 ce2:	0f 90       	pop	r0
 ce4:	cf 91       	pop	r28
 ce6:	df 91       	pop	r29
 ce8:	08 95       	ret

00000cea <LED_vToggle>:
void LED_vToggle(unsigned char portname,unsigned char pinnumber)
{
 cea:	df 93       	push	r29
 cec:	cf 93       	push	r28
 cee:	00 d0       	rcall	.+0      	; 0xcf0 <LED_vToggle+0x6>
 cf0:	cd b7       	in	r28, 0x3d	; 61
 cf2:	de b7       	in	r29, 0x3e	; 62
 cf4:	89 83       	std	Y+1, r24	; 0x01
 cf6:	6a 83       	std	Y+2, r22	; 0x02
	DIO_toggle(portname,pinnumber);//Set the given pin in the given port to zero if it is one or set it to one if it is zero
 cf8:	89 81       	ldd	r24, Y+1	; 0x01
 cfa:	6a 81       	ldd	r22, Y+2	; 0x02
 cfc:	0e 94 3c 03 	call	0x678	; 0x678 <DIO_toggle>
}
 d00:	0f 90       	pop	r0
 d02:	0f 90       	pop	r0
 d04:	cf 91       	pop	r28
 d06:	df 91       	pop	r29
 d08:	08 95       	ret

00000d0a <_exit>:
 d0a:	f8 94       	cli

00000d0c <__stop_program>:
 d0c:	ff cf       	rjmp	.-2      	; 0xd0c <__stop_program>
