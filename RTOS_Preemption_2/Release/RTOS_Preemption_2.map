Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./preemption.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./croutine.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
                              ./queue.o (memcpy)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
                              ./tasks.o (memset)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strncpy.o)
                              ./tasks.o (strncpy)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./croutine.o
LOAD ./heap_1.o
LOAD ./list.o
LOAD ./port.o
LOAD ./preemption.o
LOAD ./queue.o
LOAD ./tasks.o
LOAD ./timers.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1a32
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./croutine.o
 .text          0x00000092        0x0 ./heap_1.o
 .text          0x00000092        0x0 ./list.o
 .text          0x00000092        0x0 ./port.o
 .text          0x00000092        0x0 ./preemption.o
 .text          0x00000092        0x0 ./queue.o
 .text          0x00000092        0x0 ./tasks.o
 .text          0x00000092        0x0 ./timers.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strncpy.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.xCoRoutineRemoveFromEventList
                0x00000092       0x4e ./croutine.o
                0x00000092                xCoRoutineRemoveFromEventList
 .text.vCoRoutineSchedule
                0x000000e0      0x1c0 ./croutine.o
                0x000000e0                vCoRoutineSchedule
 .text.vCoRoutineAddToDelayedList
                0x000002a0       0x7a ./croutine.o
                0x000002a0                vCoRoutineAddToDelayedList
 .text.xCoRoutineCreate
                0x0000031a       0xf4 ./croutine.o
                0x0000031a                xCoRoutineCreate
 .text.vPortFree
                0x0000040e        0x2 ./heap_1.o
                0x0000040e                vPortFree
 .text.vPortInitialiseBlocks
                0x00000410        0xa ./heap_1.o
                0x00000410                vPortInitialiseBlocks
 .text.xPortGetFreeHeapSize
                0x0000041a       0x14 ./heap_1.o
                0x0000041a                xPortGetFreeHeapSize
 .text.pvPortMalloc
                0x0000042e       0x4e ./heap_1.o
                0x0000042e                pvPortMalloc
 .text.vListInitialise
                0x0000047c       0x20 ./list.o
                0x0000047c                vListInitialise
 .text.vListInitialiseItem
                0x0000049c        0x8 ./list.o
                0x0000049c                vListInitialiseItem
 .text.vListInsertEnd
                0x000004a4       0x52 ./list.o
                0x000004a4                vListInsertEnd
 .text.vListInsert
                0x000004f6       0x6a ./list.o
                0x000004f6                vListInsert
 .text.vListRemove
                0x00000560       0x50 ./list.o
                0x00000560                vListRemove
 .text.pxPortInitialiseStack
                0x000005b0       0x90 ./port.o
                0x000005b0                pxPortInitialiseStack
 .text.xPortStartScheduler
                0x00000640       0x6a ./port.o
                0x00000640                xPortStartScheduler
 .text.vPortEndScheduler
                0x000006aa        0x2 ./port.o
                0x000006aa                vPortEndScheduler
 .text.vPortYieldFromTick
                0x000006ac       0xb6 ./port.o
                0x000006ac                vPortYieldFromTick
 .text.__vector_7
                0x00000762        0x6 ./port.o
                0x00000762                __vector_7
 .text.vPortYield
                0x00000768       0xb2 ./port.o
                0x00000768                vPortYield
 .text.task1    0x0000081a       0x36 ./preemption.o
                0x0000081a                task1
 .text.task2    0x00000850       0x36 ./preemption.o
                0x00000850                task2
 .text.main     0x00000886       0x4a ./preemption.o
                0x00000886                main
 .text.uxQueueMessagesWaiting
                0x000008d0       0x10 ./queue.o
                0x000008d0                uxQueueMessagesWaiting
 .text.uxQueueMessagesWaitingFromISR
                0x000008e0        0x6 ./queue.o
                0x000008e0                uxQueueMessagesWaitingFromISR
 .text.xQueueIsQueueEmptyFromISR
                0x000008e6       0x10 ./queue.o
                0x000008e6                xQueueIsQueueEmptyFromISR
 .text.xQueueIsQueueFullFromISR
                0x000008f6       0x12 ./queue.o
                0x000008f6                xQueueIsQueueFullFromISR
 .text.vQueueDelete
                0x00000908       0x1c ./queue.o
                0x00000908                vQueueDelete
 .text.xQueueReceiveFromISR
                0x00000924       0x7e ./queue.o
                0x00000924                xQueueReceiveFromISR
 .text.prvCopyDataToQueue
                0x000009a2       0x82 ./queue.o
 .text.xQueueGenericSendFromISR
                0x00000a24       0x50 ./queue.o
                0x00000a24                xQueueGenericSendFromISR
 .text.prvUnlockQueue
                0x00000a74       0x80 ./queue.o
 .text.xQueueGenericReceive
                0x00000af4      0x198 ./queue.o
                0x00000af4                xQueueGenericReceive
 .text.xQueueGenericSend
                0x00000c8c      0x148 ./queue.o
                0x00000c8c                xQueueGenericSend
 .text.xQueueCreate
                0x00000dd4       0xbe ./queue.o
                0x00000dd4                xQueueCreate
 .text.xQueueCreateCountingSemaphore
                0x00000e92       0x18 ./queue.o
                0x00000e92                xQueueCreateCountingSemaphore
 .text.xTaskIsTaskSuspended
                0x00000eaa       0x28 ./tasks.o
                0x00000eaa                xTaskIsTaskSuspended
 .text.vTaskSuspendAll
                0x00000ed2        0xc ./tasks.o
                0x00000ed2                vTaskSuspendAll
 .text.xTaskGetTickCount
                0x00000ede       0x16 ./tasks.o
                0x00000ede                xTaskGetTickCount
 .text.xTaskGetTickCountFromISR
                0x00000ef4        0xc ./tasks.o
                0x00000ef4                xTaskGetTickCountFromISR
 .text.uxTaskGetNumberOfTasks
                0x00000f00        0x6 ./tasks.o
                0x00000f00                uxTaskGetNumberOfTasks
 .text.vTaskSwitchContext
                0x00000f06       0x84 ./tasks.o
                0x00000f06                vTaskSwitchContext
 .text.vTaskSetTimeOutState
                0x00000f8a       0x16 ./tasks.o
                0x00000f8a                vTaskSetTimeOutState
 .text.xTaskCheckForTimeOut
                0x00000fa0       0x7c ./tasks.o
                0x00000fa0                xTaskCheckForTimeOut
 .text.vTaskMissedYield
                0x0000101c        0x8 ./tasks.o
                0x0000101c                vTaskMissedYield
 .text.xTaskRemoveFromEventList
                0x00001024       0x7e ./tasks.o
                0x00001024                xTaskRemoveFromEventList
 .text.vTaskIncrementTick
                0x000010a2      0x148 ./tasks.o
                0x000010a2                vTaskIncrementTick
 .text.xTaskResumeFromISR
                0x000011ea       0x9c ./tasks.o
                0x000011ea                xTaskResumeFromISR
 .text.prvAddCurrentTaskToDelayedList
                0x00001286       0x6e ./tasks.o
 .text.vTaskPlaceOnEventList
                0x000012f4       0x58 ./tasks.o
                0x000012f4                vTaskPlaceOnEventList
 .text.xTaskResumeAll
                0x0000134c       0xf6 ./tasks.o
                0x0000134c                xTaskResumeAll
 .text.vTaskResume
                0x00001442       0x92 ./tasks.o
                0x00001442                vTaskResume
 .text.vTaskSuspend
                0x000014d4       0xa2 ./tasks.o
                0x000014d4                vTaskSuspend
 .text.vTaskDelay
                0x00001576       0x4e ./tasks.o
                0x00001576                vTaskDelay
 .text.vTaskDelayUntil
                0x000015c4       0x78 ./tasks.o
                0x000015c4                vTaskDelayUntil
 .text.vTaskDelete
                0x0000163c       0x9a ./tasks.o
                0x0000163c                vTaskDelete
 .text.vTaskEndScheduler
                0x000016d6        0xc ./tasks.o
                0x000016d6                vTaskEndScheduler
 .text.prvIdleTask
                0x000016e2       0x66 ./tasks.o
 .text.xTaskGenericCreate
                0x00001748      0x252 ./tasks.o
                0x00001748                xTaskGenericCreate
 .text.vTaskStartScheduler
                0x0000199a       0x56 ./tasks.o
                0x0000199a                vTaskStartScheduler
 .text.libgcc   0x000019f0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000019f0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000019f0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000019f0       0x12 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
                0x000019f0                memcpy
 .text.avr-libc
                0x00001a02        0xe c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
                0x00001a02                memset
 .text.avr-libc
                0x00001a10       0x1e c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strncpy.o)
                0x00001a10                strncpy
                0x00001a2e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001a2e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00001a2e                exit
                0x00001a2e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001a2e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00001a32                _etext = .

.data           0x00800060        0xc load address 0x00001a32
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./croutine.o
 .data          0x00800060        0x0 ./heap_1.o
 .data          0x00800060        0x0 ./list.o
 .data          0x00800060        0x0 ./port.o
 .data          0x00800060        0x4 ./preemption.o
 .data          0x00800064        0x0 ./queue.o
 .data          0x00800064        0x5 ./tasks.o
 .data          0x00800069        0x0 ./timers.o
 .data          0x00800069        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800069        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800069        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x00800069        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
 .data          0x00800069        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 .data          0x00800069        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strncpy.o)
 *(.data*)
 .data.xNextTaskUnblockTime
                0x00800069        0x2 ./tasks.o
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080006c                . = ALIGN (0x2)
 *fill*         0x0080006b        0x1 00
                0x0080006c                _edata = .
                0x0080006c                PROVIDE (__data_end, .)

.bss            0x0080006c      0x487
                0x0080006c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0080006c        0x0 ./croutine.o
 .bss           0x0080006c        0x0 ./heap_1.o
 .bss           0x0080006c        0x0 ./list.o
 .bss           0x0080006c        0x0 ./port.o
 .bss           0x0080006c        0x0 ./preemption.o
 .bss           0x0080006c        0x0 ./queue.o
 .bss           0x0080006c        0x0 ./tasks.o
 .bss           0x0080006c        0x0 ./timers.o
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strncpy.o)
 *(.bss*)
 .bss.pxCurrentCoRoutine
                0x0080006c        0x2 ./croutine.o
                0x0080006c                pxCurrentCoRoutine
 .bss.uxTopCoRoutineReadyPriority
                0x0080006e        0x1 ./croutine.o
 .bss.xLastTickCount
                0x0080006f        0x2 ./croutine.o
 .bss.xPassedTicks
                0x00800071        0x2 ./croutine.o
 .bss.xCoRoutineTickCount
                0x00800073        0x2 ./croutine.o
 .bss.pxReadyCoRoutineLists
                0x00800075       0x12 ./croutine.o
 .bss.xDelayedCoRoutineList1
                0x00800087        0x9 ./croutine.o
 .bss.xDelayedCoRoutineList2
                0x00800090        0x9 ./croutine.o
 .bss.pxDelayedCoRoutineList
                0x00800099        0x2 ./croutine.o
 .bss.pxOverflowDelayedCoRoutineList
                0x0080009b        0x2 ./croutine.o
 .bss.xPendingReadyCoRoutineList
                0x0080009d        0x9 ./croutine.o
 .bss.xNextFreeByte
                0x008000a6        0x2 ./heap_1.o
 .bss.xHeap     0x008000a8      0x3e8 ./heap_1.o
 .bss.pxCurrentTCB
                0x00800490        0x2 ./tasks.o
                0x00800490                pxCurrentTCB
 .bss.xMissedYield
                0x00800492        0x1 ./tasks.o
 .bss.xNumOfOverflows
                0x00800493        0x1 ./tasks.o
 .bss.xTickCount
                0x00800494        0x2 ./tasks.o
 .bss.uxSchedulerSuspended
                0x00800496        0x1 ./tasks.o
 .bss.uxTopReadyPriority
                0x00800497        0x1 ./tasks.o
 .bss.uxMissedTicks
                0x00800498        0x1 ./tasks.o
 .bss.uxCurrentNumberOfTasks
                0x00800499        0x1 ./tasks.o
 .bss.xSchedulerRunning
                0x0080049a        0x1 ./tasks.o
 .bss.uxTasksDeleted
                0x0080049b        0x1 ./tasks.o
 .bss.uxTaskNumber
                0x0080049c        0x1 ./tasks.o
 .bss.uxTopUsedPriority
                0x0080049d        0x1 ./tasks.o
 .bss.pxReadyTasksLists
                0x0080049e       0x24 ./tasks.o
 .bss.xDelayedTaskList1
                0x008004c2        0x9 ./tasks.o
 .bss.xDelayedTaskList2
                0x008004cb        0x9 ./tasks.o
 .bss.pxDelayedTaskList
                0x008004d4        0x2 ./tasks.o
 .bss.pxOverflowDelayedTaskList
                0x008004d6        0x2 ./tasks.o
 .bss.xPendingReadyList
                0x008004d8        0x9 ./tasks.o
 .bss.xTasksWaitingTermination
                0x008004e1        0x9 ./tasks.o
 .bss.xSuspendedTaskList
                0x008004ea        0x9 ./tasks.o
 *(COMMON)
                0x008004f3                PROVIDE (__bss_end, .)
                0x00001a32                __data_load_start = LOADADDR (.data)
                0x00001a3e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008004f3        0x0
                0x008004f3                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008004f3                PROVIDE (__noinit_end, .)
                0x008004f3                _end = .
                0x008004f3                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(RTOS_Preemption_2.elf elf32-avr)
LOAD linker stubs
